// Code generated by go-bindata. DO NOT EDIT.
// sources:
// LICENSE (1.12kB)
// Makefile (885B)
// README.md (5.923kB)
// builder/create-dmg.builder (516B)
// create-dmg (19.107kB)
// doc-project/Developer Notes.md (1.412kB)
// doc-project/Release Checklist.md (325B)
// support/eula-resources-template.xml (2.372kB)
// support/template.applescript (1.828kB)
// .this-is-the-create-dmg-repo (128B)

package bindata

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _license = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x52\x4d\x6f\xe3\x36\x14\xbc\xf3\x57\x0c\x72\x4a\x00\x35\x4d\x83\x1e\x8a\xde\x18\x8b\xb6\xd8\x4a\xa4\x41\xd1\xeb\xfa\x48\x4b\x74\xc4\x56\x26\x0d\x91\x5e\xc3\xff\xbe\xa0\xec\xec\x36\xdd\x93\x61\xbe\xf9\x78\x33\x4f\x7a\xb0\x68\xb8\x46\xed\x3a\xeb\xa3\xc5\x63\xc3\xf5\x13\x21\x8b\x70\xba\x4e\xee\x7d\x48\x78\xec\x9e\xf0\xfa\xf2\xf2\xdb\x4f\xaf\x2f\xbf\xfc\x0a\xea\xfb\xc9\x5e\xa1\xcd\x64\x7c\x8a\xe1\xeb\x0f\xc0\xd7\x97\x1b\xe6\x82\x3f\x8c\xff\xc7\x12\xb2\xb6\xd3\xd1\xc5\xe8\x82\x87\x8b\x18\xec\x64\xf7\x57\xbc\x67\xba\xed\x0b\x1c\x26\x6b\x11\x0e\xe8\x06\x33\xbd\xdb\x02\x29\xc0\xf8\x2b\x4e\x76\x8a\xc1\x23\xec\x93\x71\xde\xf9\x77\x18\x74\xe1\x74\x25\xe1\x80\x34\xb8\x88\x18\x0e\xe9\x62\x26\x0b\xe3\x7b\x98\x18\x43\xe7\x4c\xb2\x3d\xfa\xd0\x9d\x8f\xd6\x27\x93\xb2\xdf\xc1\x8d\x36\xe2\x31\x0d\x16\x0f\xed\x9d\xf1\xf0\x34\x9b\xf4\xd6\x8c\xc4\x79\xe4\xd9\xc7\x08\x17\x97\x86\x70\x4e\x98\x6c\x4c\x93\xeb\xb2\x46\x01\xe7\xbb\xf1\xdc\xe7\x1d\x3e\xc6\xa3\x3b\xba\xbb\x43\xa6\xcf\xe9\x23\x49\x01\xe7\x68\x8b\x79\xcf\x02\xc7\xd0\xbb\x43\xfe\xb5\x73\xac\xd3\x79\x3f\xba\x38\x14\xe8\x5d\x96\xde\x9f\x93\x2d\x10\xf3\xe3\xdc\x7a\x91\x73\xfc\x1c\x26\x44\x3b\x8e\xa4\x0b\x27\x67\x23\xe6\xac\xdf\xb7\x9b\x31\x79\xf5\x53\x2e\x34\xdd\x2b\x8a\xf9\xe5\x32\x84\xe3\xe7\x24\x2e\x92\xc3\x79\xf2\x2e\x0e\x76\xe6\xf4\x01\x31\xcc\x8e\x7f\xdb\x2e\xe5\x97\x0c\x3f\x84\x71\x0c\x97\x1c\xad\x0b\xbe\x77\x39\x51\xfc\x9d\x90\xfc\x49\x98\x7d\xf8\x6a\xe7\x2c\xb7\xe3\xfa\x90\x5c\x77\xab\x7b\x3e\xc0\xe9\xfb\x55\xef\xa3\x38\x98\x71\xc4\xde\xde\x0b\xb3\x3d\x9c\x87\xf9\x4f\x9c\x29\xdb\xc7\x64\x7c\x72\x66\xc4\x29\x4c\xb3\xdf\xff\x63\x3e\x13\xa2\x2b\x86\x56\x2e\xf5\x96\x2a\x06\xde\x62\xad\xe4\x17\x5e\xb2\x12\x0f\xb4\x05\x6f\x1f\x0a\x6c\xb9\xae\xe4\x46\x63\x4b\x95\xa2\x42\xef\x20\x97\xa0\x62\x87\x3f\xb9\x28\x0b\xb0\xbf\xd6\x8a\xb5\x2d\xa4\x22\xbc\x59\xd7\x9c\x95\x05\xb8\x58\xd4\x9b\x92\x8b\x15\xde\x36\x1a\x42\x6a\xd4\xbc\xe1\x9a\x95\xd0\x12\xd9\xf0\x2e\xc5\x59\x9b\xc5\x1a\xa6\x16\x15\x15\x9a\xbe\xf1\x9a\xeb\x5d\x41\x96\x5c\x8b\xac\xb9\x94\x0a\x14\x6b\xaa\x34\x5f\x6c\x6a\xaa\xb0\xde\xa8\xb5\x6c\x19\xa8\x28\x21\xa4\xe0\x62\xa9\xb8\x58\xb1\x86\x09\xfd\x0c\x2e\x20\x24\xd8\x17\x26\x34\xda\x8a\xd6\x75\xb6\x22\x74\xa3\x2b\xa9\xf2\x7e\x58\xc8\xf5\x4e\xf1\x55\xa5\x51\xc9\xba\x64\xaa\xc5\x1b\x43\xcd\xe9\x5b\xcd\x6e\x56\x62\x87\x45\x4d\x79\x53\xa0\xa4\x0d\x5d\xb1\x99\x25\x75\xc5\x14\xc9\xb0\xdb\x76\xd8\x56\x2c\x3f\x65\x3f\x2a\x40\x17\x9a\x4b\x91\x63\x2c\xa4\xd0\x8a\x2e\x74\x01\x2d\x95\xfe\x46\xdd\xf2\x96\x15\xa0\x8a\xb7\xb9\x90\xa5\x92\x4d\x41\x72\x9d\x72\x99\x21\x5c\x64\x9e\x60\x37\x95\x5c\x35\x3e\x5d\x44\xaa\xf9\xff\xa6\x65\xdf\x04\x51\x32\x5a\x73\xb1\x6a\x33\x39\x47\xfc\x00\x3f\x93\x7f\x03\x00\x00\xff\xff\xcc\xc1\xd1\x26\x60\x04\x00\x00")

func licenseBytes() ([]byte, error) {
	return bindataRead(
		_license,
		"LICENSE",
	)
}

func license() (*asset, error) {
	bytes, err := licenseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "LICENSE", size: 1120, mode: os.FileMode(0644), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4b, 0xdb, 0x61, 0xf5, 0xfa, 0xc6, 0x9f, 0xd5, 0xcc, 0x3, 0x8, 0x53, 0x5f, 0xec, 0xbc, 0x4f, 0x22, 0xbb, 0x75, 0xa3, 0xe6, 0x15, 0xad, 0xbd, 0x5d, 0x73, 0x92, 0x37, 0x2f, 0xa, 0xc, 0xc3}}
	return a, nil
}

var _makefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x51\x4d\xaf\xa2\x30\x14\x5d\x7b\x7f\xc5\x4d\x86\x05\x2c\xb0\x1b\x33\x0b\x13\x17\x8d\x12\x35\xe3\x57\x90\xcd\xac\x4c\x2d\x65\x24\x03\x94\xb4\x35\x4f\x63\xf8\xef\x2f\x20\xf5\x11\x62\xde\xd3\x5d\x73\xce\xb9\xe7\x9c\xde\xfb\x0b\xd7\xec\xbf\x48\xd2\x4c\x60\x22\x15\x4e\xe5\x87\x66\x57\x80\x1d\x9d\xfe\xa1\xf3\xe0\x10\xd1\x70\x43\xd7\x01\x4e\x90\x2b\xc1\x8c\xf0\xe3\xfc\x1f\x40\xa9\x44\x92\x5e\x70\x82\xe4\xac\x15\xc9\x24\x67\x19\x88\x8b\xe0\x87\x07\xe1\xdc\xee\xcf\x0a\x8e\x69\x11\xa7\xaa\x81\x3a\x92\x8a\x1c\xd3\x02\x62\x66\x98\x92\xd2\x58\x81\xe5\xf4\x89\x29\xd1\xb0\x96\xe9\x28\x2b\x88\x25\x7f\x86\x93\x58\x72\xe2\xdc\x7a\xd5\x2b\xd0\x57\xcd\x65\x91\xf4\x43\x84\xe1\x90\xb3\xba\xdc\xa4\xe7\x93\xb3\x02\xb4\x6a\x33\x86\x00\xfb\x45\xb0\x5a\xd5\xbf\x3d\xa6\x05\xd1\x27\x58\x6e\xf6\x11\x6d\x90\xb4\xd0\x86\x65\x99\x45\x0e\xbb\x70\x3b\x0f\xe9\xba\xce\x71\x5b\xcc\x7b\x90\x33\x1a\xd1\xa6\x41\x0b\x54\xe8\xe7\xf8\x7b\x34\x02\x18\xee\x16\xdb\xcd\xdf\xb1\xb5\xc3\x73\x61\x8d\xa1\x7d\x8c\xbb\xfb\x1f\x7c\x99\xa3\x1f\xa3\xe3\xce\x82\x7d\x34\x5b\x86\x9e\xe3\xde\x3f\xe7\x7d\x27\xb9\x1f\xa4\x2b\xb1\xb5\xbd\x4e\xc8\xb3\x11\xf2\x5a\x87\xf6\x6e\x1e\x71\xdc\xde\x2d\x3c\x18\xf0\x12\xfd\x10\xf5\xb9\x2c\xa5\x32\xef\x8e\x89\x0b\xcb\xcb\x4c\xe8\x77\xe7\x8c\xd0\xe6\xf5\x21\x78\xac\x7f\x0c\x03\x95\xa3\x9f\xfc\xb8\x8c\x5a\xa5\x92\x97\x13\x3e\x03\x00\x00\xff\xff\x96\x3e\x91\xa2\x75\x03\x00\x00")

func makefileBytes() ([]byte, error) {
	return bindataRead(
		_makefile,
		"Makefile",
	)
}

func makefile() (*asset, error) {
	bytes, err := makefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Makefile", size: 885, mode: os.FileMode(0644), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbd, 0xa7, 0xad, 0x61, 0x3, 0x5f, 0x45, 0xc6, 0x5c, 0x12, 0xeb, 0x9, 0xd0, 0x57, 0xac, 0x2e, 0xb2, 0xf3, 0x72, 0x3, 0x2d, 0xb5, 0x3f, 0xa8, 0xab, 0xcf, 0xb, 0x95, 0x6d, 0x3a, 0xca, 0xa8}}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x7d\x73\xdb\x36\xd2\xff\x9f\x9f\x62\xeb\xce\x34\x92\x1f\x91\xb2\xd5\x27\x2f\x4d\x7d\x99\xba\x97\xa4\xed\x8d\x73\xbe\xab\xe3\xe9\x5d\xed\x8e\x02\x11\x2b\x12\x11\x88\x65\x00\x50\x12\x33\xf9\xf0\x37\x0b\x90\x94\xe4\xd8\x9d\xcb\x65\x26\x23\x1a\xd8\xfd\xed\x62\x77\xb1\x2f\xc8\x2d\x0a\x8f\xa9\xac\x8a\xe4\x2f\xc3\xbf\x24\x39\x07\x57\xa2\xd6\xe0\x72\xab\x6a\x0f\x9e\x60\xd1\x28\x2d\x61\x29\x4c\xde\xc2\xcb\x37\x3f\xb9\x2c\x49\xae\xbc\xf0\x8d\x03\x61\x24\xe4\x64\xbc\x55\x8b\xc6\x2b\x32\x50\x93\x56\x79\x9b\xa4\x7f\xfa\x2f\x49\xfe\x3a\x88\x06\xe5\xa0\x22\xe7\x75\x0b\x95\x50\xc6\x0b\x65\x50\xc2\xa2\x85\x9b\x1f\x04\x19\xfc\xf8\xc7\xa8\xf4\xbe\x76\xcf\xa7\xd3\x42\xf9\xb2\x59\x64\x39\x55\xd3\xb0\x33\x0e\xd2\x7d\x89\x3b\x0d\xc8\x3a\xd8\x94\x04\x0e\x8d\x84\xba\xd1\x1a\x2c\x7e\x68\xd0\x79\x97\x25\x6f\x4b\x84\xda\xd2\x7b\xcc\x3d\x94\x54\x21\xd4\xa2\x40\x96\x7e\x76\x8f\x80\x9d\x69\xf6\x3e\x5f\x64\x49\xf2\x1b\xc2\x46\x69\x0d\x15\xda\x02\x41\x98\xf6\x40\x0c\xf8\x52\x78\x10\x52\x3a\x70\x54\xa1\x2f\x95\x29\xa0\x71\xb8\x6c\x74\x50\x56\x12\x3a\x30\xe4\x61\x61\x51\xac\x00\xb7\xca\x79\x26\x09\x84\x6c\xd6\x5f\x96\xd0\x52\xf3\xc8\x32\x34\x88\xdc\xab\x35\x32\xbf\x0d\xdc\x1b\x61\xa2\x3b\x10\xc4\xce\x58\x76\x02\x64\xe1\x7d\xe3\xfc\x40\x90\x97\xc2\x4f\xa0\xd6\x28\x1c\x42\x1d\x75\x00\x32\xf0\x93\xf2\x9e\xb1\x3c\xdc\x14\xe1\x33\x53\x07\x47\xbd\xa0\xc5\xa2\x3d\x30\xf8\x03\x34\xe3\x20\xf3\x06\x2b\xa1\x34\x9c\x1b\x69\x71\x03\x52\x59\xcc\xbd\x6e\xff\x18\x2d\x35\x39\xf7\x83\xa8\xdf\x0b\xb3\xc2\xcc\xa0\x1f\x67\x07\x1e\xdf\x08\x07\x64\x55\xa1\x8c\xd0\xba\x85\x08\x1e\x7d\x1e\xb0\x5a\x78\x2b\xac\x30\xde\xd1\xfa\x7e\xef\x07\xa2\xb5\x62\xdc\x5f\x0c\xbc\x11\x2d\xcc\x4e\x66\x27\x1d\xf7\x06\xfe\xc6\x72\xef\xe7\x8c\x3a\x8d\xa1\x44\x5d\xa3\x84\xb5\x08\x81\xb7\x51\xbe\x0c\x81\xd4\xc5\x07\x3b\xc2\x38\x2f\xb4\x16\x1c\xd4\xc9\x61\xec\xa6\xf0\x6f\x6a\x20\x17\x06\x54\x24\x62\xf7\xb9\xfe\xba\x34\x8e\xed\x7d\xf3\x33\x55\xb8\xb0\xb8\xd9\xa9\xc1\x7f\x65\xae\x1c\x3f\x4f\x12\x80\x77\xef\xde\xb9\x32\x01\x8e\x83\xcd\x00\xb3\x77\x1f\x03\xc5\xbe\x28\x49\x1b\xa3\x49\xc4\x78\xbf\xd1\xc2\x73\xb4\x59\x0c\x2e\xbe\xf7\xa8\xf7\x46\xf0\xb4\xe3\x70\xd3\x88\x10\xaf\x50\x2f\x5f\x79\x58\x5a\xaa\x58\x84\xc5\x03\x35\x2b\xb1\xc2\x9e\xec\x73\xdd\x84\x76\x04\xb9\x26\x83\x41\x3b\x34\x5e\x59\x04\x8b\x35\x39\xe5\xc9\xb6\x41\x88\x6d\x0c\x0b\xd0\x94\x07\xa7\x3f\x20\xa8\x50\xbe\x43\xfa\x6f\x8f\x94\x15\xca\xf7\x2a\x5d\x3b\x51\x60\xd2\xb9\x29\x42\xee\x08\xe1\x86\x6a\xf6\xa6\x83\x2c\xcb\xfe\x80\x33\x6a\x7c\xdd\xf8\xb9\x11\x15\x66\x7c\xb9\xe1\xcc\x51\x63\x73\x9c\x2f\x49\x4b\xb4\x2f\x92\x00\x79\xce\x7e\x21\xe3\xd1\x78\x07\xb4\x84\x48\x73\xdb\x11\xc5\x5c\xb0\xe0\x0c\x54\x2b\x64\x4b\x7a\x0a\x36\x90\xca\xad\x40\x55\xa2\xc0\x2c\x49\x8e\x8f\x2f\xa3\xe4\xe7\xc7\xc7\x6c\xb7\xe3\xe3\x34\x5d\x93\x66\xc9\x70\x7b\xc6\x3f\xb7\x2f\x9e\x1f\x1f\x83\x43\x0f\x6b\xd2\x4d\x85\x10\xf6\x46\x52\xb9\x5a\x8b\x36\x00\x07\xd8\xd7\xca\xb0\x54\xa7\x24\x2e\x44\x97\x14\x94\x91\xb4\x01\xaf\xbc\xc6\xf1\x0e\x5c\xe5\x64\xe0\xf6\x8c\x7f\x32\x95\x1b\xf7\x99\x04\xde\xe9\xc8\x17\x22\x5f\x15\x96\x1a\x23\xe1\xf6\xac\x56\x79\x56\x9b\x62\x47\xdf\x9d\x74\x8f\x28\x9c\x0b\x46\xb5\xa5\xb5\x92\x08\xb5\x29\x26\x50\xa8\xe5\x04\xde\xd7\x45\xaf\x42\x54\x2b\xad\xc9\xc1\xed\xd9\xf6\xf6\x05\xdc\x9e\xb5\x3b\xcc\x10\x19\x5c\x2e\xf8\x50\x83\x29\x99\xe3\x90\xdd\xa9\x8f\x6c\xa2\x8d\x92\xbe\x0c\x18\x25\xaa\xa2\xf4\x3b\xa0\x40\x40\xcb\x07\x71\x3c\x6e\x7d\x8f\xc2\xdf\x73\xfe\xde\xb1\xf7\xc6\xc3\x6d\x07\x35\x3a\x3d\x49\x4f\x9f\xf4\x87\x60\x1b\xf5\xdc\xfc\x7d\x3f\x37\xef\xb8\x8e\xbd\xa9\x39\xff\x9e\xce\x9e\xed\x43\xc0\xed\xd9\x52\x69\x9c\x47\x4f\xff\xa9\x3d\xfa\xa3\x28\x8d\x8f\xdc\xbe\x8f\x4a\x25\x31\xc5\xad\x47\xe3\xd4\x5d\x44\x46\xe1\xfd\x78\xfb\x06\x1a\x5a\x06\x9c\x0e\x40\xd4\x75\x2a\x2d\xd5\xa9\x56\x66\x75\x57\x87\x70\xbf\x05\xf0\x3e\x84\x7d\x4f\x70\x5e\xd7\x5a\xe5\x21\x01\xba\x09\xd7\x0c\xbe\xba\x41\xc9\xed\x04\xda\x0e\xf5\x83\xfe\x32\xd0\xe9\x85\x5a\x58\x61\xdb\xe9\x3f\x1b\x95\xaf\x2e\x88\x56\x0f\x42\x63\xa3\x05\xdc\x9e\xf1\xcf\x9c\xcf\x11\x41\x85\xf7\x22\x2f\x41\x80\x56\x39\x1a\x17\x4d\x05\xfd\xad\xab\x8a\x8e\xd9\xe2\x47\xb8\x3d\xb3\xf8\x71\x5e\x0b\x0e\x9d\x60\xe8\x1a\x73\xb5\x6c\x21\x6f\x9c\xa7\x0a\x78\x83\x19\x7f\xc5\x8f\xe0\x89\x34\xd7\x59\xc9\x0b\xca\xe4\xba\x91\x78\x20\xa1\x83\x35\x94\x2a\xe3\xd1\x1a\xf4\x29\x1a\xb1\xd0\xc8\xc0\x52\x39\xfe\x04\xd1\x78\xaa\x84\x57\x39\x54\xd4\x18\xff\x4d\x4e\x75\x7f\x98\x25\xd9\x4a\xf8\x7d\x2d\xa2\x9b\x8d\xd0\xdd\x75\x8a\x14\x30\xba\x7e\xf9\xfb\xe5\xa7\xeb\x97\x3f\xfe\xfe\xe9\xfa\xe2\xf5\xe5\xa7\xeb\x8b\x37\x97\x63\x18\x49\x5c\x8a\x46\x7b\x6e\x57\x98\xa0\x8f\x2e\x56\xcd\xb5\xce\x63\x75\x17\xba\x03\x1d\xf6\x61\xf4\xf3\xeb\xab\xff\xfb\x74\xfe\x8f\xd7\x57\x87\x70\xbc\x3c\x01\x5e\x07\xd7\xd4\x35\x59\xef\xa0\x12\xf9\xe5\x15\x9c\x9e\x64\xa7\xdf\x72\x9d\x37\xb8\x41\xdb\x8b\x44\x93\xdb\xb6\x0e\x47\x89\x16\x80\x6e\x85\xdd\xb7\x24\x1b\xa4\x5b\x74\x8d\x0e\x9d\xcd\x2e\x11\xc2\xe8\xfc\xd5\x55\x3a\x7b\xfc\x04\x52\xee\x71\x86\xd4\x59\x5b\xaa\x6a\xae\xff\xcc\x5c\x0b\xe7\x36\x64\xe5\x1d\x69\xa9\x40\x77\x3a\x7b\xf6\xbf\x0a\x3d\x9d\x3d\xfb\x12\xa1\x42\xca\x60\x59\xce\x19\xc2\x16\xe8\x77\x37\x97\x97\x3f\xc5\x44\xf3\xf9\x4d\x16\x52\xf2\xff\x70\x93\x85\x8e\x91\x49\xb6\xcf\x4b\x23\x2e\x95\x0b\x8c\x61\x56\xb1\xa6\x35\x47\xae\xaa\xd0\xf5\x82\x59\xef\x34\xe8\xdd\x67\x9d\xed\x2e\x47\x1c\x96\x95\x98\x6f\x2a\x61\x9a\x50\x4e\x3d\xc1\x16\xde\xfc\xd8\x27\x0b\xa9\x1a\xaf\x74\xba\x46\xbb\x20\x17\x62\x14\xb7\x98\x37\x1e\xa1\xdb\xe2\x82\xd2\xed\x42\x45\x12\xef\x30\x7e\x68\x14\xfa\x07\xd8\xc2\xde\x3e\xd3\x42\xa3\xe3\xd2\x06\xe1\x23\xe8\x19\xe2\x7f\x38\xb8\xc4\xda\x62\xce\x3d\xde\x04\x0c\xa2\x1c\x02\x6c\x96\xcd\xb2\x53\x36\x51\x20\x9c\xc0\xcd\xd7\xa7\xb3\xa7\x5f\xd0\xcd\x70\xeb\x3d\x3d\x9d\x3d\x1d\xf7\x06\xcc\x49\xa2\x53\x05\xe7\x47\xfe\x11\xbe\xb1\x5d\xde\x18\x76\xee\x98\x71\x68\xfd\xe2\xe5\xe1\x22\x3e\x70\x0e\x97\xde\x0b\x1b\xdd\x91\x5b\x94\xdc\xde\x08\xed\x02\xea\xb0\x75\x07\x75\xb4\x11\xca\xc7\xe9\xc8\x79\x51\x6b\x74\xe3\x9d\xa4\x15\xb6\x79\x29\x94\x01\xe7\xc9\xa2\x84\x3d\xd0\x04\x00\xe0\x35\x59\xa8\xc8\x72\xc3\x15\x93\x02\x07\x79\x5e\x62\xbe\x82\x1b\x4e\xca\x5c\x19\x24\xe5\x4d\x85\xc6\x87\xcd\x9d\xc5\x24\xae\x51\x53\x8d\x36\x13\x4c\x18\x4c\x77\x40\x3a\x75\x98\x37\x56\xf9\x76\xda\xa9\xae\x4c\x31\xaf\x44\x4e\x6e\xee\x68\xe9\x37\xc2\xe2\x7c\x81\x4b\xb2\x38\x97\xca\x0d\x63\xdd\x34\xe6\xcc\x48\xee\x4b\x9c\x77\xdc\x01\x73\xbe\x21\xbb\x5a\x6a\xda\xf4\x5e\x70\x2b\x55\xa7\xef\xd1\xac\x54\x68\x79\x80\xff\xee\x5a\x97\xb4\xb6\xe8\xbd\x5a\xb6\x7c\x4d\xc3\x61\xae\x42\xdb\x3c\xe9\xa7\x24\x65\xe0\x4a\x18\xb9\xa0\x6d\xb0\x9e\x21\x93\xfe\x74\xfd\x0b\xa0\x59\x2b\x4b\x86\xcf\xe1\x38\x4e\x9e\xce\xbe\x34\x4c\x9e\xce\x06\xf5\x22\x7e\xea\xc4\x32\x5c\x8d\x3e\xb6\x83\x83\xba\x4d\xc8\xa9\xaa\x85\x57\x0b\xa5\x95\x6f\x27\x20\x29\x8e\x6d\x21\xc2\xe3\x24\x17\x16\xfa\xfb\x11\xa7\x50\x57\x21\x67\xff\xbd\x73\xc1\x88\xa9\xba\xc4\xda\xa5\x9b\x90\x6b\x77\xc1\x32\xdc\xfe\x35\x5a\xae\xdb\xc1\x62\x25\x77\x25\x5c\x94\xba\x45\x30\x4d\xb5\x40\x1b\x29\xcb\x09\xa4\x29\x4f\x30\x5d\xf1\xe1\x1e\x31\x68\xc0\x6b\x49\xf2\x6a\x48\x8d\xfd\xe0\x92\xf4\x47\x1c\x32\xbc\x11\x61\xb4\xdc\x0b\xd9\xbd\x84\x1a\x47\x98\x3e\x5b\x8f\x9c\xa6\x0d\x37\x80\x8d\x07\xe7\x2d\x99\x02\xed\x98\x2f\x6d\x9f\x59\x47\x4b\xe1\x7c\x47\xb0\x41\xb1\x42\x3b\xce\x00\x5e\x71\x9e\xbe\x93\x8c\xf7\x64\xac\x95\xd8\x9b\x77\x62\x5e\xe6\x21\x9a\x27\x87\x6e\x88\xb0\x6d\xdf\x0e\xf5\x09\x1a\x64\x63\xe3\xb8\x8c\x50\x29\x29\x35\xc2\x88\x1d\x65\xd1\x05\x23\xd5\xa5\x70\x38\x1e\xb8\x2c\xe5\xe8\x5c\x06\xf0\x96\x3b\x91\x5c\xd8\xd0\x28\x20\x17\xf0\x43\xd8\x9c\x6c\x9c\x5d\x27\xb0\xc0\x5c\x34\x0e\xf7\x82\x42\xeb\xe0\xe9\x58\x31\x40\x80\xc3\x9c\x8c\x0c\x89\x3b\xcc\xda\x64\x96\xca\x56\x07\x80\x59\x92\xbc\xda\x8a\xaa\xd6\x38\x78\xa0\x1b\x47\xbe\xfe\x6a\xba\x50\x66\xea\xca\x24\x0c\x70\xe9\x72\xbf\xcd\x4a\xbb\xa1\x13\x2d\x0f\x24\xf0\xcd\x37\x60\xab\x87\xf7\xf7\x47\x9b\xdb\x04\x60\x37\x53\x1c\xed\xf1\xc0\xc0\x73\xb4\xa3\x0a\x4d\xe9\x91\xd8\x51\xcd\x87\x39\xa1\xa7\xda\x6b\xf7\x8f\x54\x0f\x31\xdf\xad\xf2\x8c\xd0\xd3\xee\xf5\xfa\xb3\x93\x13\x38\x9d\x9d\x1c\x6e\x84\x52\xf5\xec\xe4\x04\xfe\xff\xa4\xdf\xd9\x75\xd6\xa7\x07\x6b\x07\xba\x73\x12\x3b\x8a\x90\xdf\xf5\x44\x77\xfa\xe0\xcf\xc9\x23\xd9\x61\xb7\xfb\x84\x21\x9e\x3d\x0e\x7b\x47\x0f\x1a\x34\xf2\x1e\x1d\x4c\x81\xd3\xa3\x38\x06\x5e\x61\x0c\xcb\x77\x18\xfd\xea\xde\xf5\xd5\xad\x9b\xcc\x22\x17\x78\x8b\xa1\x95\x8b\x09\xbc\x27\xce\x92\xe4\xd7\x18\xdb\x21\x81\xdd\x79\x4f\xf8\x3b\xc5\x77\x22\xdc\xe6\x18\x23\xcc\x0b\x23\x85\x1d\x06\x73\xd1\x8f\x06\xa1\x6c\x4e\x2f\xaf\xe0\x5f\xdc\xb9\x75\xd7\x45\xc6\x57\x29\xc6\x58\xc5\x97\x08\xce\xc7\x8e\x15\x0b\x94\xa7\x27\xd9\x13\xb8\x32\xb4\x81\x0b\xa4\x9a\x61\x39\x7f\xf1\xfc\x6f\x03\xe7\x23\x09\x5a\xad\x42\x2c\xaf\x10\x6b\x1e\xd2\x19\x80\x35\x52\x06\x04\x17\x6b\xd3\xf6\x79\xc8\xf1\x42\x4d\xce\xa9\x85\xc6\x49\xb8\xf2\x0d\x57\x29\xdf\x18\xe1\x91\x2f\xd0\x06\xe3\x5b\x94\x24\xf3\xc8\x43\x29\xd6\x08\x21\xd4\x17\xb4\x45\x07\xb6\x31\x86\x91\x49\xcb\x1d\x24\x2d\xa3\xa6\x42\xe2\x87\x46\xf8\xa0\x4a\x18\x1e\xc2\x69\x4a\x51\xd7\x68\x32\x78\x19\x6b\x1b\x5b\x30\x3e\xfc\x61\x7c\x3b\xeb\x1e\x0f\x23\x99\xeb\xfd\xa1\x85\xf3\xf0\x6d\xfa\x18\x5a\x14\xd6\x3d\xe2\x23\xf9\x72\xb0\x61\xff\x72\xe2\xbe\xe7\xf3\xd0\x32\xbc\x1f\x4d\xa2\xbc\x0a\x85\xd9\x6f\x81\x67\x07\xf6\xfa\xb1\xf1\xa0\xc2\x23\x1d\x77\xef\x12\x04\x2c\x9a\x68\x28\x13\xbb\x98\xfe\x58\x13\x28\x08\x44\x89\x22\xda\xdb\x22\x27\x5e\x50\xfe\x2b\xf8\x0d\x1f\x69\x0d\x9c\xde\x3c\x05\x53\xc7\xca\xc3\x90\x9e\xa0\x40\x1f\x1e\x62\xd4\x36\x78\x76\xf7\x20\xd8\x9b\xae\x77\xea\x63\xce\xc1\x28\xac\x56\xdc\x3a\x75\x44\x57\x97\x17\x19\xbc\x2d\x85\x7f\xe4\xa2\x1b\x3c\x11\x94\xec\x74\x4f\x20\x51\x74\x55\x4e\x19\x3e\xf1\xb7\x19\x7c\x3f\x4e\x92\x73\xcd\x13\x4d\x28\x08\x77\x43\x33\x85\x1b\x43\x12\xf9\x3a\xc9\xaa\xb8\xb7\xe4\x5e\x28\xd3\xb8\xeb\xe9\x1e\x19\xd7\xb3\x1b\x59\x15\xe1\xd5\x78\xc7\x53\xb7\xb5\xca\xea\xd6\x97\x64\x32\xb2\x45\xf8\x7b\xda\x93\x31\x8f\xeb\xee\xd8\xcd\x95\x17\xf9\xea\x72\x8d\x96\x9b\x0a\x08\x0f\xab\x43\x97\xf3\x7c\x3a\x75\xbc\x4d\xdd\x76\xd0\xa1\x27\x71\xd3\xef\x9e\x3c\x7b\x36\x9b\x96\xb4\x49\x25\xa5\x2a\xed\x52\xa4\x48\x8d\xca\x31\xd5\x44\x1c\xd6\x9c\x31\x79\x20\x4b\x2b\x91\xa7\xe4\xd2\x6d\x1a\x0a\x5e\x9a\x53\x55\x09\x23\x39\x65\x60\xca\xc5\xd7\x8d\x93\xff\x04\x00\x00\xff\xff\x4b\x40\x84\x11\x23\x17\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 5923, mode: os.FileMode(0644), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa5, 0x42, 0xf1, 0x6b, 0x75, 0x74, 0xe3, 0x57, 0x6a, 0xc1, 0x8, 0xe9, 0xd9, 0xbe, 0xae, 0x13, 0xc1, 0x0, 0x39, 0x6c, 0xf6, 0xe0, 0xbb, 0x8, 0x3, 0xe9, 0x4b, 0x45, 0xe, 0xdc, 0x95, 0xb2}}
	return a, nil
}

var _builderCreateDmgBuilder = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x6a\xc3\x30\x10\x84\xcf\xbb\xef\x91\xa3\x93\x43\xaf\xa5\xd0\x1f\x17\x0c\xc5\x36\xb6\x92\xd2\x1a\x51\x94\x68\xed\x0a\xa4\x5a\x48\x32\x84\x3c\x7d\xc1\x22\x8d\xdc\x86\x1e\x35\xfb\xcd\xec\x68\xdb\x9c\x81\xb0\xf6\xe3\x4b\x18\x82\x83\x23\x11\x28\x93\x66\x40\xdc\xe5\x4d\x5b\x54\x65\xa2\xad\x0f\x93\x4b\x9e\xf0\x49\x42\xfa\x8d\x11\x3e\x90\x43\x2c\xf3\xd7\xa7\xa2\x81\xfd\xa4\xb4\x5c\x4b\xe5\x20\x90\xb1\xb0\xca\x66\x01\xb2\x19\x78\x2e\x5e\xf2\x34\xf0\xa4\x2c\xf4\x24\xc2\xe4\x48\xc2\x6a\x7e\xae\x10\xf1\xb1\xaa\xdf\x58\x05\xdd\x4f\x16\x47\x28\x4a\x56\xa5\xcb\xbb\x65\x2f\xbe\x49\xba\x47\xd8\x0b\x63\x35\xfd\x05\xa3\x7e\x86\x26\x6b\x47\x17\xae\x50\x71\x80\x80\xed\xf6\xa1\x65\xbb\xfb\xa6\x4d\x0a\xdd\x0a\x1d\xc8\xdd\xa5\x5b\xa1\xeb\x38\x47\xc4\xf7\xa2\x5e\xa4\x9d\x94\x3d\xd7\x8f\xfe\xac\x57\x9a\x7c\x66\x1d\xf5\xea\xc8\x17\xbf\x44\xac\xb7\x0c\x0c\x0d\x62\x3f\x1e\xe3\xe5\xfc\xaf\x7b\x5d\x23\x62\x82\x1e\x87\xe8\xf7\x37\xff\x58\x2f\xc3\x8b\xeb\x3b\x00\x00\xff\xff\xda\x50\x2e\xe6\x04\x02\x00\x00")

func builderCreateDmgBuilderBytes() ([]byte, error) {
	return bindataRead(
		_builderCreateDmgBuilder,
		"builder/create-dmg.builder",
	)
}

func builderCreateDmgBuilder() (*asset, error) {
	bytes, err := builderCreateDmgBuilderBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builder/create-dmg.builder", size: 516, mode: os.FileMode(0644), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x45, 0x19, 0x22, 0x65, 0xf3, 0x99, 0x89, 0x73, 0x97, 0xd7, 0xcb, 0x8f, 0x52, 0xdf, 0x52, 0x7f, 0x54, 0x38, 0x3f, 0xee, 0x5f, 0xfc, 0xda, 0x21, 0x63, 0x94, 0xf9, 0x7, 0xd3, 0x15, 0x6d, 0x60}}
	return a, nil
}

var _createDmg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x7c\x7b\x77\xdb\xb6\x93\xe8\xdf\xe2\xa7\x98\xd2\x3c\x91\xd4\x9a\x92\xe5\x26\xde\xd6\xb1\xf2\xbb\xb2\x2d\x27\xda\xfa\x91\x95\xe4\xa6\x8f\x64\x75\x20\x12\x92\xb0\xa6\x08\x16\x00\x6d\x2b\xb6\xce\xb9\x5f\xe3\x7e\xbd\xfb\x49\xee\x19\x00\x7c\xe8\xe5\xa6\x7b\xee\xa6\xa7\xb6\x44\x62\x06\x83\xc1\x60\xde\xf0\xde\x77\xcd\x54\x8a\xe6\x98\xc5\x4d\x1a\xdf\xc3\x98\xc8\x99\xe3\xec\xc1\x99\xa0\x44\x51\x20\x20\x28\x09\x7d\x1e\x47\x0b\x08\x99\xbc\x03\x36\x27\x53\x0a\x7c\x02\x6a\x46\x21\xe0\xb1\xa2\xb1\x92\xf8\x9d\xc0\x84\x47\x21\x15\x08\x7c\x4a\x58\x04\x3c\x55\xc0\x63\x20\xf1\x02\xd2\x78\x46\xe2\x30\xa2\x21\x50\x21\xb8\x90\x8e\xa4\x0a\x7c\xfa\xd6\xd9\x83\x4e\xbc\x80\x80\xcf\xe7\x24\x0e\x41\xcd\x88\x02\xfa\xc8\x94\x84\x07\xa6\x66\x10\xf3\xd8\xff\x4a\x05\x87\x80\x87\x14\x1e\x58\x14\x41\x40\x52\x49\xf5\xdc\x09\x4b\x68\xc4\x62\x0a\x8a\xc3\x84\xb0\xc8\xe0\xe4\xfa\x39\x7e\x7f\xeb\x38\x67\xe7\x57\xef\x47\xbf\x76\xfb\x83\xde\xcd\x75\xbb\xda\x6a\x1c\x36\x5a\x55\x24\x6f\x38\xa3\x30\x49\xa3\x08\x12\xa2\x66\x08\x8f\xf8\x5c\x99\x26\x09\x17\xaa\xe9\x42\xc8\x04\x0d\x14\x17\x0b\x50\x33\x26\x41\x06\x82\x25\x0a\x98\x84\x54\xb2\x78\xea\xec\x41\x6d\x88\xcf\x35\x41\x63\x0a\x38\x71\x9a\xc0\x78\x61\xe8\x8c\x88\xa2\x02\x58\xac\xb1\x1a\xd8\x46\xdd\xd0\x32\xb8\xfd\xf8\xf1\xa6\x3f\x1c\x9d\xf7\xfa\x6d\xd7\x75\x9c\x9b\xc1\xe8\xe2\xf6\xf2\x32\xa7\xd1\xf5\x6a\xf2\x61\x74\x4f\x85\x84\x67\x90\x34\x04\x3f\x86\xc3\x04\x9e\x21\x48\x15\xf8\x21\x1c\x83\x3f\x81\x43\x78\x06\x25\xf0\x6b\xf5\xcf\x63\x99\x90\x80\x1e\x7f\xa9\x66\x63\x82\x96\x5f\x77\x11\xef\x55\xe7\xdf\x6f\xfa\x65\xc4\x34\x98\x71\xf0\xd6\x66\x2c\x50\x37\x10\x75\xcb\xc2\xf6\xae\xff\x39\xec\x61\xdd\x75\x3e\xf5\xae\x7f\x6b\xb7\x0e\xf0\xf7\xef\xed\x23\xfd\xfb\x53\xfb\xcd\x81\xfe\xf0\xa1\xfd\xe3\x9b\x03\xa7\x77\x76\x73\x3d\x1a\xf4\xfe\xe8\xb6\x5b\x87\x3f\x39\xc3\xee\x6f\x43\xfb\xed\xc8\xb9\xb8\xe9\x5f\x75\x86\x6d\xf7\xf6\xfc\x8f\x1b\xd7\xb9\xe8\x5d\x76\x07\xbf\x0f\x86\xdd\xab\xb6\xfb\xe1\x62\xf0\x83\xeb\x74\xce\xcf\x47\xf8\x74\x34\xb8\xb9\xed\x9f\x75\x07\xed\x5a\xbd\x78\x36\xec\xf4\xdf\x77\x87\xfa\x59\xef\xaa\xf3\xbe\xfb\x4b\xf7\x77\xe4\xf0\x87\xf3\xde\xed\xb0\xa7\x49\x3e\xbd\x19\xf4\x86\xfa\xe1\xa0\x73\x7d\x7e\x7a\xf3\xdb\x68\xd0\xb9\xe8\xb6\x0f\x9c\xd3\xcb\xee\x60\xd0\x3e\x70\x06\xbf\xf4\x3e\x8e\xfe\xbd\x7b\xfd\x4b\xef\x1a\xbf\x5e\x75\x7e\xeb\x5d\xdd\x5e\x8d\x6e\xaf\xaf\x6e\x6e\xaf\x87\xbd\xeb\xf7\xa3\xce\x70\xd8\xbd\xfa\x38\x1c\xb4\x7f\x74\x06\xbd\xf7\xd7\x9d\xe1\x6d\xbf\x8b\x08\xaf\x6f\x86\x9d\x3e\xae\x02\xf7\x74\x92\xc6\x81\x62\x3c\x86\x24\x15\x54\xef\x25\xe3\x71\xad\x0e\x4f\x4e\x45\xb3\xd1\xf5\xca\x62\xe9\x3a\xcb\x12\xc8\x2c\x64\xa9\x62\xd1\x28\xa4\x8a\x04\xb3\x91\xa0\x4a\x2c\x0c\xe8\x1e\xdc\xc6\x73\x9e\xc6\xca\xa9\xa4\xe6\x03\x8b\xa7\x23\xa2\x14\x9d\x27\x4a\xb6\x0f\xf0\xb1\x62\x91\x53\xb1\x93\xdc\xe6\x83\x4a\xc7\xb6\xd1\x68\xb8\x4e\xa5\x52\xab\xc1\x16\x1c\x3f\xfc\x00\xf5\xba\x53\xa9\x58\x1a\xc0\xd0\x00\xae\xd7\x42\x18\x3c\x95\x23\x14\xef\xb6\xf7\x2f\x83\x22\x7f\x02\xed\x36\xc0\x01\xd4\xeb\xf0\xea\x15\x8c\x05\x25\x77\x50\xfa\xb7\x07\x31\x57\x33\xa4\x63\xca\xa9\x84\x07\xc1\xe3\xe9\x3a\x82\xef\xda\xd0\x3a\xb2\x08\xf0\x29\x78\xc5\x3b\xd8\x33\x8f\xb4\x42\xc0\x13\xc5\x05\x9b\xb2\x98\x44\xe6\x31\x8e\x71\x2a\x15\x73\xa6\xc9\x98\xdf\x53\x90\x8a\x28\x3a\xa7\xb1\x02\x41\x55\x2a\x62\x09\x2d\x60\x13\x50\x54\x2a\xad\x28\x68\x08\xb5\x15\xe2\x5b\x47\xf5\x86\xc6\x01\xd0\x53\x10\x90\x18\xe6\xe4\x8e\x5a\x05\x17\xd2\xec\x28\x3f\x85\xbc\xd1\x68\x40\xc8\x63\xba\x84\x71\xc4\x83\x3b\x54\x1d\x63\x0a\xf4\x91\x06\xa9\xa2\xa1\x53\x09\xf9\x4e\xf6\xe2\x44\x2f\x88\x54\x79\xf5\xad\x23\x5c\x75\x42\x14\xa3\x71\x80\xe8\x67\x24\x95\x8a\x86\xfb\x25\x4e\x68\xc2\xba\xa7\xb7\x83\xdf\xf3\x2d\xff\x44\x98\x02\x02\x73\x8e\x6b\xb7\x5b\x2d\x23\x4a\x13\xf0\x6a\x35\x68\xc1\xf7\x50\x3b\x84\xef\xbf\xdf\x46\x5c\x5d\x6f\x3d\xae\x0c\xe5\x48\xeb\xb3\xcd\x41\x2b\x92\xba\x45\xae\x03\x6d\x31\xfc\x70\x3e\x05\xaf\x56\x16\xfe\xfa\xaa\x90\xa7\x92\x4c\xa9\x01\xb4\x03\x9c\x4a\x40\x14\x9c\x9c\x74\x6f\x3e\x74\x2f\x3f\x3a\x8e\xb1\x3d\x12\x4d\x0a\x89\x83\x05\x9c\x5f\xbd\x87\x09\x8b\x68\xc3\x71\x6e\x11\xf8\x18\xc0\xab\x8d\x89\xa4\x31\x99\x53\xf0\x0e\xea\xf0\x27\x4f\x10\xb7\xfc\x02\x27\x3c\x55\x49\xaa\x46\xf8\xaa\x11\xce\xa7\xef\xe0\x44\xf2\x54\x04\x74\x64\xcc\xd3\x3b\xc7\xe9\xa0\x1d\x29\x59\xae\xb5\x01\xb9\x5e\x0f\x78\xc2\x68\x08\x2c\xb6\x16\xa2\x74\x90\x1c\xe7\xc6\x4c\x78\xec\x00\xf8\xfe\x3d\x8f\x34\x29\x27\xf8\xf3\x9d\x63\x24\x1f\xd9\x78\xcf\xa3\x74\x4e\x41\xbf\xac\x85\x4c\x26\x11\x59\x68\x94\x1a\xe1\x05\x8b\x43\x2a\x40\xb2\x90\x8e\x89\x00\x34\x81\x0f\x2c\x0e\xf9\x03\x28\xa6\x22\x5a\xcf\x70\xb3\x80\xc7\x70\x82\x3f\x1b\x2c\x88\xe5\x96\x09\xf0\x9d\x1e\x3d\x26\xc1\xdd\x54\xf0\x34\x0e\xe1\x24\x61\x41\x23\x89\xa7\xe5\xe1\x66\x89\x50\x1a\x65\xec\x79\x2d\x11\xfc\x9e\x85\x14\x92\x78\xba\x0f\x53\x36\xd9\x07\x2e\xe0\xbf\x92\xa9\xa1\xc1\x50\xe5\x27\x5c\xc2\xc9\xe3\x3b\x38\x59\x94\x71\x26\x5c\x32\xbd\xb1\xb8\x24\x3b\x81\x01\x28\xc3\x4a\xf6\x95\xc2\xc9\x03\x0b\xd5\xec\x1d\x9c\xcc\x28\x9b\xce\x54\x19\x8b\x7e\x6f\xdd\x8a\x4d\x24\x8a\x3e\x2a\x8b\x02\x3f\x8e\xf0\x63\x19\x3a\x63\x1b\x7d\xb4\x98\x6a\xad\x03\xbf\x75\x64\xa8\x47\xe6\x58\x60\xfc\xb8\x0b\x18\xdf\x49\x0b\x9d\x26\x78\xb6\x5b\x87\x3f\x15\x18\xb4\x04\x8e\xcc\x36\xef\xe6\x41\xb6\x02\x16\xd1\xaa\x2c\xb6\x65\xc6\x42\xea\xd3\x47\x45\x63\x94\x77\x38\xc9\x71\x65\x48\x70\x80\x86\x2c\x06\xf1\x89\x46\xa3\xe1\x49\x92\xf8\xa1\xe0\x89\x1f\xb1\xf8\x6e\x6d\x7e\xad\xac\x08\xe0\x6b\xd0\xaf\x15\x87\x4e\x92\x44\x2c\x20\x5a\x44\xf7\x81\x28\x88\xb8\xf9\x06\x8f\xfb\x0b\x8d\xf1\xaf\xe8\x1f\x21\x4c\x25\x15\xf0\x1f\x29\x0b\xee\x2e\x39\xbf\x03\x16\x4b\x45\xa2\x08\x3d\xa5\xed\xe8\x69\x1a\x11\x38\xc1\x9f\x23\x5c\x44\x86\x9a\x28\x6d\x54\x08\x44\x2c\xa0\xb1\x34\x8c\xca\x3c\x30\xd4\x1c\xb5\x24\x22\x78\x3a\x70\x23\xb9\x80\xfe\xf0\xc2\xec\x40\xcc\x7d\x16\x2b\x2a\x62\xaa\x7c\x1a\x93\xb1\xe6\x0b\xfe\x0b\x99\xc4\x6f\x40\x52\xc5\xe7\x44\xb1\x00\xb4\xe2\x82\x57\x78\x7c\x0d\x2d\x13\x2e\xe6\xa8\x5f\xcc\xef\x7c\xdb\x12\x1a\xb0\xc9\xc2\x6e\x17\x1a\x94\x92\x7f\x6b\x41\x6a\xe8\x8b\x3c\xdf\x9e\x9f\xfe\xf1\x7c\x7b\x79\x71\xf3\x7c\x7b\x79\x75\x53\x87\x5a\x48\x27\x24\x8d\xb4\x47\x88\x03\x0c\x85\xb8\x12\xb9\x90\x8a\xce\xcd\xf6\x9a\xcf\xdb\x66\x2b\xcf\x53\x00\xd5\xd0\xcb\x79\xee\x7c\xbc\x18\xac\xce\x80\x8f\xf7\x01\x9f\x83\xf5\x50\x25\xcc\x49\x70\x33\x80\xd6\x41\xa3\xf5\x23\x72\x29\xa6\x0f\x54\x18\x2a\x68\x1c\x88\x45\xa2\xec\xac\x86\x53\x60\x1f\xe2\xfe\x4c\xb8\xd0\x34\x08\x2a\xd3\x68\xcd\x3d\x80\x5a\xa7\x3b\xf0\x0f\xdf\x1c\x81\x0f\x0b\x9e\xe6\x7a\x30\x11\x7c\x9e\x28\x1a\x6a\xe0\x84\x48\xf9\xc0\x45\xb8\x32\x9d\x4f\xa8\x44\x7f\xee\xbf\x3f\x6b\xeb\xf0\xa7\x6f\x9f\x95\x84\xa1\x66\x37\x9c\x28\x22\xa6\xd4\x28\xfb\x77\x86\xed\xef\x9e\x4f\x32\x3d\xbe\x2a\xd5\x24\x0c\xf1\x7f\x7d\x4c\x49\x64\x04\x8f\x8b\x4c\xd7\xd4\xd0\xec\x8f\x29\xca\x79\x08\x73\x24\x32\x41\xc1\x64\x73\x2a\xcd\x9c\x48\xb0\xaf\x09\xb6\xaa\xe4\xb1\x7c\xfe\xd7\xb6\x55\x8f\x98\x93\x38\x25\x51\xb4\x40\xf1\x7e\x84\xab\x53\xa3\x08\x8c\x77\xe5\xdf\x53\x31\xe6\x32\x13\x62\xeb\x41\x64\xfe\x1f\xda\x07\x3b\x00\xe6\xe8\xe0\x94\x21\xff\x4a\x19\x55\xbb\xe1\xf4\xeb\x02\x6a\x1c\x51\x29\xed\x68\xfd\x59\x93\x6a\x8e\x48\xb6\xf4\x90\x26\x82\x06\x44\x7b\x18\x31\xa5\x61\x2e\x5f\x87\x18\x31\x21\x93\xf4\x40\xc3\x07\x74\x3c\x24\x9b\xc6\x70\x82\x3f\x89\x4a\x45\x7e\xb8\xf3\x57\x6b\xdc\xc8\x5d\x37\x73\x08\xd0\xa6\xe6\xb0\xf6\x70\x2b\x22\x34\x53\x03\x41\x43\x1a\x2b\x46\xa2\xdc\xca\xe5\x2f\xd7\xb0\xd6\x1e\x08\x06\x8a\x68\x34\xa5\x22\x49\x44\x65\xbd\x98\xe9\x8e\x2e\x82\x19\x2a\x12\xa9\xb8\xa0\x21\x94\xf0\xea\x19\x25\x89\xc3\x31\x7f\xf4\x25\x99\xec\xda\x03\x8d\xcb\x8e\xc3\x08\x15\xfd\xb1\x31\x8b\x98\x5a\xe8\x39\x43\x8e\x94\x59\x9e\xd6\xf0\xa3\x3d\x9d\x56\x62\xf5\x81\x2d\xc8\xb5\x52\x24\xef\x58\xe2\xff\x17\x8d\xef\x58\x9c\xed\x0a\x3e\xb2\x9e\x80\x9f\x08\xaa\x14\x9b\x2c\xf0\x84\xa0\x0a\xa7\x03\x1d\x3e\xee\xa3\x58\x4e\x52\xbd\xbf\x03\x4b\x11\xd2\x80\xf1\xf1\xfb\xdb\x1e\xd0\xf8\x9e\x09\x1e\xa3\xdf\x67\x96\x97\xfb\x55\x7a\x82\x19\x7f\x80\x92\x73\x66\x5f\x42\x9c\xce\xc7\x54\xe0\xf8\xd9\x3e\xca\x17\x8d\x12\x03\x60\xfd\x14\x13\xfc\xe2\x63\x8c\x62\x29\x8d\x1d\xc7\x3a\x68\x3a\x1a\x80\x03\xf4\xea\xf6\x60\x42\x30\x54\x96\xda\x6f\x36\xd1\xb9\x56\xd4\x52\x31\x64\x77\x99\x05\x78\x10\xd0\xef\xc2\x7d\x99\x73\x81\x3b\x4a\x62\x20\x80\x41\x75\x44\x1d\x74\x79\x85\x32\x66\xd4\x07\xfa\x98\x98\x94\x00\x85\x99\x11\x56\xa3\x42\xd0\x17\xe5\x82\x88\x95\x74\x04\x86\xde\x33\x1a\xdc\x21\xdf\x26\x5c\x38\x7b\x26\x43\x80\xd1\xbd\x35\xc8\xc6\x4f\xda\xd7\x8b\x4f\x25\x10\x29\xd3\x39\x8e\x46\x11\x32\x16\x40\x48\x65\xf5\x13\xd4\x88\x44\x56\x27\xa2\xd9\x7a\x73\x58\x6f\x14\xae\xeb\x84\xc5\xe1\x48\x1f\x9e\x51\xc8\x84\xf1\x61\xd1\xf4\x61\xb4\x74\xaf\xb5\x50\xdb\xf5\x9e\x5a\x4b\xd7\x71\x2a\xef\x5e\x1d\x82\x71\x8c\x07\x94\x88\x60\x66\x69\x33\x67\xcf\xb8\x95\xdb\xb8\x64\x72\x0c\xe0\x3d\x65\x18\x97\x18\x74\xb8\x18\x01\xd2\x38\x9d\x53\x41\x14\x05\xe3\x9e\xfc\x5c\x30\x4c\x3a\x15\xc4\xcd\x90\xec\xa7\x56\xa3\xf1\xf3\xf2\x2d\xe8\x60\x64\x0f\xac\xfb\xae\xd3\x24\xcc\x72\x34\x87\x73\x2a\x96\xfe\x09\x3a\x83\xb8\x28\xa7\x52\xc9\x3f\xb7\xbd\x5a\xa1\x59\x26\x1c\x9e\x61\x2a\x68\x02\x7e\x57\xeb\x81\x88\x8b\x76\x4c\xef\xa9\x00\xb7\x44\xad\x0b\xcf\x30\xa3\x24\x04\xdf\x7b\x62\x4b\x78\x06\xf2\x70\x07\xd5\xa7\x44\xb0\x58\x81\xf7\xe3\xb2\x0a\xcf\xf0\x48\xc4\x54\x62\xac\xc9\x26\xf0\xe7\x9f\xe0\xc7\x88\x21\x9f\x75\xe9\xc2\x97\x2f\x6f\x91\x4e\x24\x2f\x8b\x6e\x56\x06\xe8\xe7\x26\xba\x83\x03\xa4\x98\xd9\xe8\x45\x4b\x64\x47\x4c\x53\x1d\xff\x25\x44\xe8\x84\x8d\xf3\x30\x43\x6d\xff\xe7\x9f\x88\xa6\x75\x7c\x70\xdc\x5a\xba\xd0\x06\xd7\x37\x33\x21\xa3\x02\x22\x29\x78\x2d\x60\x38\x67\xee\xd0\x23\x8d\x95\x5f\x6f\x2e\x6f\xaf\xba\xa3\xeb\xce\x55\xb7\xed\x7a\x87\x7a\x72\x39\x63\x13\xf5\x16\xcc\xaf\xb7\x19\x08\xba\x7b\x65\x10\x9d\xec\xb8\xe8\x5d\xbe\x08\x57\xf8\xe2\x1a\xf4\xb4\x73\xf6\xcb\xfb\xfe\xcd\xed\xf5\xf9\x2a\xe4\xda\xf3\x8c\x9c\x22\x0c\x72\xbd\xb5\x21\x6e\x7d\x1d\xf0\xec\xb2\x73\x3b\xe8\xb6\x5d\xb4\x58\xa5\x10\x20\x61\x01\xaa\x62\x3c\x2a\x1c\x23\x55\x2d\x29\x11\x85\xcf\x6e\xa3\x18\x75\xbc\x8e\x5e\x53\xf0\xd9\xd5\x73\xf4\xbb\x1f\x6f\x06\xbd\x61\xef\xe6\x7a\xf4\xa1\x77\x7e\xde\x35\xab\x1e\xac\x4c\x58\x76\x91\x51\x6a\x16\xc0\xd0\xed\x51\x1c\x9e\xd4\x8c\x9e\x72\xa5\xf8\xbc\x8f\x51\xc1\x6f\xf0\x03\xb4\x0e\x0e\xf6\xf1\xc7\x72\x17\xd7\x72\x9f\x5e\x33\xad\xc8\x2a\xbd\xc0\xe8\x3c\x86\xd0\x20\x45\xea\xe9\x05\x90\x22\xee\xd1\x30\x3a\xbd\xe5\x1d\xbe\x05\x9d\xdf\xf2\x7e\xdc\x80\xda\x06\x9c\xcf\xa8\x93\x61\x16\xfa\xc3\xdf\x42\xe7\xb2\x94\x73\x36\x63\xa6\xf7\xb4\xf6\x68\xb9\xce\x5e\xcd\xd8\xcf\xae\x77\xf8\xd9\xd5\xfc\xf5\x7e\xdc\x07\xef\xf5\x12\xb1\x6d\xae\x74\xdb\xe4\xab\xe1\x8a\x26\xe3\x43\xef\xbc\x77\xfd\xbe\x44\xc4\xca\x83\x65\xe6\x04\x15\xe1\xcb\x8c\x85\x21\xdd\x46\x8e\x12\x29\xdd\x4e\x8a\x9e\x7c\x06\xcf\xd6\x1a\xe9\x79\x75\xb6\x20\x3b\x62\x36\x9f\x80\xcf\xed\xe7\xb7\x26\x27\x72\x60\x47\x24\xa9\xa0\x2b\xc3\xca\x79\x88\xb5\xb1\xe5\x08\x48\x8f\xfd\x8f\xcb\xd1\x65\xef\xfa\x97\xb6\x77\x68\xbf\xed\x12\x5f\xbb\xa0\x3c\x1c\xca\xd8\x7c\xb8\x8f\x1a\xee\x45\x36\x9b\xa9\x57\xc2\x39\x3d\x77\xe7\xe3\xc7\xcb\xde\x59\x47\xef\x6a\x89\x88\xf2\xe3\xbf\xa1\xa6\x1c\xf2\xfd\x63\x82\x30\x50\xd3\x74\x74\x6f\x2f\x3b\xa3\xfe\xa0\x7f\x66\x09\xd8\x32\x76\x33\x14\xd3\x90\xd7\x37\xbd\xeb\x61\xb7\x7f\xdd\x1d\xb6\x5b\x05\xa4\x01\x31\xe1\x94\x1e\x96\x65\x79\x77\x1f\xba\x22\x26\x32\x00\xa5\x44\xf0\x6e\x20\x1b\x6c\x98\x35\x5c\x77\x4e\x2f\xbb\xa3\xee\xf5\x59\xff\xf7\x8f\xc8\x3a\x43\x50\xa7\x3b\x38\xed\x0d\x07\xed\xc3\x37\x47\xeb\xf4\xad\x86\x31\xdf\x82\x04\xa3\x9d\x35\x24\x79\x54\xf2\x9c\x85\x28\xd6\x6d\x46\xb0\xb5\x3c\xf5\x0f\xed\x1a\x2e\x66\xf5\x9d\xcd\x6b\xeb\x77\x3f\xba\xdf\x7a\xf8\x35\x19\x7f\xa7\x00\x5e\xef\x83\xf7\xe6\x9b\x14\xc0\x0a\x57\xd7\x82\x1e\x4d\xd2\x79\x6f\xf0\xcb\x48\xe7\xd8\xff\x56\x7d\xae\x05\x3b\x46\x8f\x6c\x64\xe4\xab\xd9\xfb\xea\x3a\x47\x57\x42\x9e\x9d\xd0\xfa\xed\x06\x6c\x16\x8c\x68\xb0\x52\xb6\x7e\x37\xb5\x59\xa0\x61\xa5\x39\x4b\xe9\xef\x06\x28\x07\x11\x66\x9a\x72\x61\x61\xe3\x10\xe8\x50\xc1\xd8\x78\x5d\x71\xd8\x18\x20\xe8\x57\xfd\xda\x38\x3c\xfd\xee\x1f\x18\xfe\xc7\xdc\xf8\xca\xa6\x26\x15\x2d\x74\x84\xda\x80\xdf\x79\xaa\x3d\x6e\x41\xe7\xfc\xde\xc4\x46\x1a\x01\x10\xeb\xfc\x34\x76\x52\x5d\x0a\x41\x0c\xd5\xe5\xba\xc7\x3a\x51\xdf\x97\x28\xba\x8d\xef\x62\xfe\x10\x83\xc9\xb5\x1e\x83\xd7\x6a\x40\x3f\x8d\xa1\x5a\x0a\x2e\x8c\xe6\xae\x6a\x4f\x17\x3f\x19\x32\x4c\x5a\x1b\x31\x52\x49\x82\xcc\xdb\x32\xaa\xc0\xb8\x5c\x26\x8f\x82\xa6\x3c\xaf\xde\x18\xc1\xbb\xa3\x0b\xf8\x1a\xb1\xb1\x1f\xd1\x7b\x1a\xb5\x7f\x76\x35\x5d\xb7\xe7\xa7\x7f\xec\x1c\x3e\xfe\xca\x92\xc3\xb5\xf1\x97\x17\x06\xbd\xfd\x76\x55\xfa\x56\x5a\x22\xfa\xec\xf9\x32\x37\xd2\x41\xc7\x19\xc9\xdb\xd6\xa4\xdd\x4f\xc7\x3a\xb4\x5f\x01\xc5\xa6\xe4\xc6\x1a\x06\x5e\x73\x05\x34\xe6\xe9\x74\x96\x6f\x93\xfc\x36\x16\x9a\xc9\x9c\x09\x73\x9c\xf3\xab\xf7\xa3\x8f\x9d\xe1\x87\xb6\xae\xcc\x0c\xfa\x67\xa3\x8b\x9b\xcb\xf3\x6e\x1f\x9d\xc1\x20\x34\x13\xbf\x83\x66\x48\xef\x9b\x71\x1a\x45\x6f\x21\x79\x08\xeb\xee\x8a\x5f\x7c\x4f\x22\x16\x9a\x7c\x9d\x0e\x9b\x64\x46\xb8\xeb\x3d\x65\xe8\x8f\xc1\x7f\xbd\x74\xe1\xbb\x36\xb8\x8d\x70\x3e\xdd\x5c\xcc\x8d\xce\xb3\x1b\x4f\x51\x3b\xa0\xf3\x54\xe2\xf2\x42\x13\x39\x13\x40\xb0\xc2\x1f\xf8\xc7\xeb\xcc\x29\x2a\x0c\x80\xa5\x47\x97\x03\xe1\xcb\x17\x78\xf5\x6a\xd7\x10\x8c\xbe\x37\x49\xde\xb6\xb3\xb9\xb1\x39\x86\x15\x3c\xff\x9f\xe8\x6d\x97\x88\xb1\xf4\x7a\x4f\x65\x3d\xb1\x04\x9f\xfe\x05\xad\x0d\x5a\x75\x0d\x04\x23\x41\x12\xaf\xe7\x12\x4c\x9d\x9c\xc9\x3c\x3b\x81\x0a\xc8\xe8\x8a\x52\x16\x62\x8d\xbc\x3d\xb8\xd2\xf9\x10\x53\xcb\x8e\xf8\x94\x05\x8e\x33\x38\xeb\xf7\x3e\xda\x72\xb4\x57\x03\x2d\x3e\x35\x54\x35\x36\xa2\x78\x3a\xed\x0c\x3e\x58\xbb\xf4\xe7\xc1\x97\xa5\x0b\x75\x17\x57\x91\x3c\x84\x50\x77\xb5\x28\x9e\xf7\xfa\x59\x28\x52\xc0\x65\x42\xe4\x16\x83\x72\xf1\x2c\x01\x6d\x15\x54\x7c\xbf\x25\xb8\x59\x47\x39\xec\x5e\x7d\xcc\xc6\x59\x94\x4d\xf1\xd0\xf0\xbc\x86\x91\x61\x7c\xb5\xd4\x62\x7f\x4e\x15\x0d\x14\x3c\xcc\xa8\xa0\xf0\x40\xab\x82\x82\x48\xe3\x58\xc7\xe3\x82\xcf\x1d\x47\xd2\x58\xb1\x98\x46\x3a\x53\xdd\x76\xbd\x82\x2b\xcd\x86\x9a\x31\xe9\x33\xe9\xab\x19\xf5\x0b\x59\xf0\x05\x4d\xb8\x9b\x9d\xf6\x09\xb8\xde\x0a\x8e\xb2\xe4\xed\xc1\xa7\x8d\x29\x81\xc5\x92\x85\xa6\xb9\x22\xe1\x4e\x65\xb3\x37\xa0\x4c\x83\xdd\x51\xd7\xa1\x91\xa4\x9b\x08\x33\x5c\x71\x96\x94\xa7\x61\x9e\x8e\x77\x2a\x63\x16\xeb\x48\xbe\x8c\xd1\x75\x2a\x89\xa0\x13\xf6\x68\x63\xfc\x62\xdf\xec\x68\xf4\x3d\xb6\xd0\x54\x00\x35\xe5\x8c\x08\xda\x2c\x18\x52\x10\x59\x1c\x05\xad\x05\x4b\xc1\x73\x99\x2b\xab\x31\xf5\xd6\x7d\xd6\xfa\xa3\x5e\x46\xf8\x1d\xf8\x61\x56\x3e\x2f\x51\xb6\x71\xce\xb5\x16\x3f\x23\x31\x1e\x07\x9d\xf2\xc8\x3a\x3b\x8a\xc6\x8e\x63\xa0\x8f\x09\x0d\x14\x0d\x41\xeb\xf5\x0d\x9c\x5b\x8e\xb6\xde\xe7\x42\xdf\x36\x1b\xe7\x83\xd1\x40\x71\x41\x37\x15\xcd\x39\x8d\xa8\x3e\xbc\xf9\x18\x93\x60\x01\x3c\x81\xba\xd8\x68\x93\xaf\xae\x53\x11\xf3\x5d\x68\xed\xb9\xb5\x9d\x38\x68\xe2\xf5\xf1\x77\xd6\x14\xc4\x5a\x7d\xbf\x44\xec\xd3\xca\x41\x59\xc9\xab\x88\xf9\xf6\x21\x76\xce\x5b\x49\xe1\x8a\x4e\xc9\x78\xa1\xa8\x04\xc9\xe2\xa0\x48\x8c\x4e\x08\x8b\x6c\x83\x8e\x0e\xe3\x23\x22\x74\x0a\x4e\x51\x9b\x52\x94\x45\xc2\x4c\x97\xc9\xe5\x48\xf1\xd1\x3c\xc3\x96\xf5\x33\x74\xc2\x10\x5a\x68\x1f\x04\x81\xab\xd3\x7d\x3b\x89\xc2\x53\x5a\xd5\x6e\x4f\x48\x03\x36\x27\x11\x08\xaa\xf0\x70\x61\x48\x49\x05\x75\x2a\x57\xa7\xc6\xf1\xf4\x6a\xb5\x9a\xd7\x82\xef\xe1\x4d\xeb\x10\x9a\xd0\x3a\x38\x38\xb0\xbf\xea\xf0\x03\xb4\xea\x75\xbb\x1b\x9e\x05\x58\x29\x42\x4f\xa9\x29\x22\x66\xd4\xbc\xa7\xca\xd6\xf4\x75\xee\x9e\x19\x23\xe1\xd8\x0c\x95\xb7\xde\x50\x03\xfe\x94\x42\xeb\xb0\x9c\xa8\xd2\x8b\xd3\x38\xf1\x48\xa5\xe0\x9f\x6a\xc2\x7c\xa9\x5b\x28\x90\x18\x7d\x7c\x37\xc7\xe5\x03\x26\xcc\x59\x7d\x6b\xc8\x2f\x1e\x65\x4d\x41\x14\xaa\xb2\x59\x69\x7c\xdf\x6c\x4e\xab\xf9\x2a\x6b\x5b\x78\x5d\x06\xae\x9b\xe4\x58\x49\x9a\xce\xaf\xde\x6f\xcf\xcd\x7f\xd5\x95\x11\x9d\x7a\xb5\x7b\x4e\xa5\x62\x73\xa3\x52\xce\x6e\x07\xc3\x9b\x2b\xb3\x05\xd5\xaa\x53\x4a\xe1\xad\x45\x06\x65\x71\x2b\x03\xb9\xa6\x80\xe2\x3d\xad\x8d\x5f\xce\xcb\x87\xdd\x2b\x1b\x49\x6d\x23\x0f\x4a\xf8\x32\x63\x5b\xd8\xda\x55\x53\x9b\xef\x4a\x31\x60\xd4\xe9\xbf\xbf\xbd\xea\x5e\x0f\x07\x6d\xd7\xcd\x77\x63\xfb\x7b\x3f\x80\xa0\x7d\xf4\x7a\x9f\xb4\x5b\x47\xfb\xb4\xdd\x3a\x72\xcd\xee\x64\xec\x30\x8a\x0f\xbc\xa7\x8d\x78\x64\x09\xbe\x14\x81\xad\xac\x94\xcf\xb5\x0b\x79\x97\x80\xeb\x3d\x95\xf4\xdf\xd2\x85\xcf\xe8\x69\x4f\xe4\x86\xf3\xe0\x4f\x24\x11\xd3\xb5\xe7\x05\x9d\x7a\x84\x29\x54\xde\x9e\xf7\x3f\x81\xf7\x54\x62\xf3\x72\xdb\xe1\x36\x8b\xce\x56\x31\x27\x77\x74\xb6\x18\x0b\x16\xee\x58\x89\xad\x42\xfa\x26\x79\xee\x6f\x27\xde\x9f\x4d\x24\xf8\x7c\x9b\xba\x59\x59\x7f\x89\x7b\x3c\xbe\xa7\x42\xad\x12\xef\xf3\xfb\x9d\x58\x36\xd6\xb1\x1e\x84\x8e\xcc\xc2\xdb\xeb\x22\x68\xb5\xd9\x7b\x9b\x9c\x32\xdb\x16\x6a\xc1\x27\x81\x4a\x49\xa4\x85\xdd\x59\x0f\x69\xbd\x5a\xa6\x1e\xb6\x4c\x5e\xcf\xf4\xa3\xc6\x98\x4a\xc5\xe7\x56\x67\x4c\x60\xcc\xa6\x53\x2a\x76\x4a\x70\xab\x70\x02\xbf\x33\xe6\x71\xfb\x3a\xca\xce\xe2\xf6\x11\xe0\x4f\xd5\xc6\xbb\x92\xdc\x6f\xac\x68\x3b\x1a\xcb\x9f\xae\x39\xdd\x66\x49\xa5\x1a\xa9\x31\x55\xa6\x27\xa2\x7c\xd0\xd7\x33\x16\xe5\x13\x97\x97\x21\x5c\xef\xe9\xbb\xf5\x81\x7f\xfe\xaf\x2f\x4b\xd7\x56\x26\xcc\xa3\x6d\x0c\xdf\x80\xf2\xd8\x97\xa5\xce\x87\x6c\x6e\x14\x7d\x4c\xc4\x26\x23\x7e\x00\xaf\x84\x3e\x6b\x6d\x32\x8b\x45\xbb\x63\xac\x8e\xee\x9d\xd4\xee\x7c\x69\xcd\x82\xda\x55\x6f\x91\x8a\x5d\x93\x1d\x1e\xd4\x8d\x83\x7d\x47\x41\xa6\x82\x82\x29\x4b\x97\x8b\xc1\xcc\x58\x4c\x16\x43\xc4\xe6\x4c\x49\xe7\xaa\x77\x3d\xda\x9c\x21\x3b\x22\x82\x6a\x28\xdf\x0c\xde\x76\x2a\x6c\x61\xe5\xba\xdf\x6e\xd9\xe2\x0a\x8b\x55\xcd\x6b\x35\x0f\x0f\x5e\xff\xf4\x43\xab\xbe\xac\xd6\xf5\x96\x81\xb7\x65\xa6\x1d\xe2\x63\xf7\xd0\x76\xee\x6d\x50\xb7\x05\x91\xe5\x69\xdf\x90\x9b\xbb\x28\x79\xb5\xce\x32\x5a\xa5\x93\x89\xb3\xb6\xb6\x1d\xca\x73\x87\x69\xd8\xa6\x05\x90\xe5\xba\x90\x8d\x33\xc5\xf4\x01\xcf\xb5\x63\xbd\xa3\xab\x1d\xdd\x8f\x8e\xee\xbc\x1b\xf5\x3b\xd7\xe7\x37\x57\x36\x8e\x6e\xfe\xaa\xf5\x9b\x74\x5f\x3c\xb8\x99\x80\x6f\x43\xa0\xe6\x89\xb6\x5d\xdf\x68\x96\x00\xb2\xa5\x5f\xf4\x2e\x87\x18\xba\x2b\xc2\x22\x3c\x5b\x2d\xab\xa3\x37\x47\xa0\xe1\x6f\xfd\xa5\x67\x39\xef\xfe\x6a\x3c\xe7\x42\x5e\x6c\x5f\x8d\xaf\x8b\x8b\x82\xc4\x21\x9f\x83\xf7\xb4\x41\xea\x12\x7c\x41\x49\xf8\x20\x98\xa2\xe0\xc7\xfc\x9e\x0a\x36\x59\xe0\x27\x92\x2a\xce\x13\x1a\xe3\xe7\xb1\xe0\x0f\x72\x9b\xea\xdb\x59\x00\xac\xfe\xa7\x0e\xe3\xaa\xf0\x5c\xda\x56\x43\xf9\x46\x09\xb0\x85\x92\x99\xb9\xc9\xf7\x2c\x30\xd9\x83\x63\x2d\x72\x5e\xb6\x34\xf7\xdb\x59\x69\x16\x89\x11\x8a\x57\x5b\xad\xcf\xea\x15\x58\x84\xa8\x3f\x8c\xf5\xfb\xc6\xf1\xd2\xad\x17\x3b\xaa\x75\xf5\x53\x0e\xb9\x5c\x21\xa0\x28\xf4\x76\xfb\xfd\x9b\xfe\x31\xa4\xa6\xff\x45\x71\x48\x04\x0f\x28\xb5\x19\x91\x8d\x26\x23\x6d\x8e\xb4\x97\x4c\x8b\xb6\xf6\x5d\x65\xe1\x07\x62\xe2\x7b\x1d\x47\x34\xdc\x95\x79\x87\x2f\xc1\xb1\x28\x82\x88\xdd\xd1\x68\x01\x63\x9a\x57\x9f\x4d\xaf\x61\x14\xe9\x86\x0f\xdb\xc7\x1a\x44\x94\xc4\x34\x84\x34\xc9\x7b\x57\xf4\x44\xa5\x48\xa8\x74\xb8\x30\x98\x3a\xb6\xaa\xc2\xcb\x59\xe3\x3a\x65\x43\xb1\x5e\x91\xdc\xcc\x72\xf0\x44\x37\x3b\x94\xaa\x91\x3a\xa1\x54\x5d\x07\xad\x9a\x86\x56\x44\x8c\x31\x60\x3e\x5f\xb3\x54\xa2\xd4\x66\xf3\xf9\x19\xe6\x77\x66\x33\xb7\x0f\x72\x2a\x41\xb2\x8d\xb4\x1d\xe3\x9b\x5b\xeb\x9e\x2b\x71\xae\x36\x89\x6b\xf5\x9b\xcd\xa5\x5e\x11\xdd\x9e\xb0\xad\x43\x0f\x59\x69\xd6\x67\x03\x96\x8c\x10\xa7\x12\xc5\x18\x20\x34\x57\x46\x97\x29\x2d\xbf\xd8\x20\xca\x16\xb4\xfe\x96\x96\xad\x7d\x7d\x2f\x12\xe4\x36\x2f\xd9\x58\x10\xb1\x68\xe6\xb0\xab\x1c\x2c\x1e\xaf\x13\xb5\x5e\x1b\xdf\x2d\x14\xa5\xde\xd6\x4c\x2a\xd6\x81\xad\x58\xe8\x1d\xdd\x44\xbc\xb2\xa5\x46\xc9\xf7\xb2\x26\x5a\xd7\xa9\x0c\xa8\xba\x40\xb4\x7e\x00\x2c\x88\xcf\xfe\x66\xf8\xfa\x86\xbf\xe0\x03\xad\x2e\xc3\xfa\x88\x3a\xd3\x68\xc8\xfd\x66\x1f\x29\x6b\x7d\xd8\xee\x11\x39\x15\x5c\xb8\x4f\x76\x8f\x58\x59\x52\x69\x90\xad\x42\x65\x68\x72\xef\xa8\x9c\x96\x29\x77\x58\xe7\x48\xb4\x9f\xd3\x4f\xe3\x72\x77\x12\x4a\x50\xc8\x01\xc5\xa6\xd4\xd4\x1c\x70\x39\xa7\x8a\x05\xd6\xf8\xe3\xf9\xe8\xda\x14\x94\xee\x6b\xf0\x6a\xf3\x3b\x45\xe7\x09\xf8\x2a\xf3\xcb\xe7\xd3\x86\x9a\x27\x8d\xdf\xf2\x7f\xf5\x6f\x32\xc8\xb6\xc9\xe6\x8e\x25\x09\xb2\xfb\xe5\x56\xaa\x5c\xd7\x3e\x50\x20\x82\x96\x3a\xaa\xf4\xd6\x18\x13\x91\xcd\x5a\x2a\x8c\x6c\x44\xa0\xba\x65\x7d\x33\x19\xd5\xc4\x35\x45\x44\xd1\x06\xc1\x49\x4d\xba\xd5\x44\x78\x95\x3c\x7a\x77\x65\xf3\x53\xef\xfa\xb7\xa6\xa7\x7f\x4e\xdd\xe2\xd9\xef\xfa\xd9\xef\x2b\xcf\x3e\xe9\x67\x9f\xf0\x99\x46\x53\xa9\xe4\xaf\x3e\xe8\x57\x1f\x8a\xe1\x1b\xcd\x1e\x2b\xea\xcb\x3e\x5a\x47\xf4\x72\xf7\x46\xd3\xfb\x9b\xf7\xeb\xe8\xf2\x66\x8c\xa6\x57\x7c\xcc\x29\xcc\xfb\x2e\x9a\x5e\xf1\x71\x9a\x73\x28\xa1\x22\x02\x3f\xd1\x43\xd7\x2a\x9d\x4d\x6f\xfd\xc1\x76\xb0\xbc\x70\xdf\xf4\x8a\x8f\xdb\x87\x6e\x96\xd7\x9b\xde\x96\x67\xdb\x81\x57\x1a\x20\x9a\xde\xea\x57\x0b\xf1\xce\x9a\x86\xb2\xe8\xbb\x8e\xee\xcb\x4a\x8c\xc9\xe7\xf0\xc0\xc5\x1d\x31\xb6\x8f\x07\x01\x91\x26\x0e\x71\xcf\x48\xfc\x7f\xff\xf7\xff\x51\x80\x81\x04\xda\x73\x17\x6a\x7e\xeb\xdf\x0e\x7f\xaa\x03\x93\x32\xa5\xd2\xa9\x54\xb4\xbf\x31\xc2\x87\xa3\x4f\x37\xfd\x5f\x3a\x66\x97\x07\x97\xdd\xee\xc7\x91\x2e\xc6\xff\xda\xb9\x6c\x1f\x16\x17\x44\xd0\xde\x9b\x1b\x21\xa8\x81\xbc\x6f\x01\x07\x49\x03\x1e\x87\x72\x07\xa1\x12\x3e\x23\xa1\xd5\x82\xcc\x8c\xca\xcf\xae\xa5\x73\xf5\x26\xca\xb7\xcc\xe9\xe4\x14\xf7\x6d\x8e\x7b\x4d\xdb\xe8\x06\xf5\xec\xf2\x04\xaa\x17\xd0\xa7\x7d\x71\x0c\xf9\x55\x46\x2e\x89\x2d\x75\x7c\x46\xed\xb8\xb6\x05\xcb\xcf\xae\x7e\x5e\xce\x64\x98\x56\x26\x36\xd9\x86\x63\x1b\x0a\x77\x23\x15\x52\xf4\xac\xed\xc1\xcd\x1d\x59\xec\xdb\x6a\x43\xc0\x79\x84\x4f\x6d\xe3\x8b\xcd\x3c\x95\x72\xd5\x17\xe6\x56\x92\xd8\x5c\xad\xae\x34\x6e\xbb\x15\xb6\xea\xdb\xe6\xf5\xc8\xa3\xd7\xb6\x1b\x2e\x4b\x44\xf3\xb8\xa8\x14\xa0\x76\x2e\xe1\x5e\xd9\x18\x84\xd3\x99\xe8\x4d\x69\xcd\x08\xd6\x18\xab\xd5\x35\x71\xba\x63\xc9\x36\xc2\x6d\xaf\xe7\x84\x4d\x31\x1e\xd6\x09\x17\x2a\xd5\x0c\x2d\x82\xcc\x75\x30\x9f\xac\xb5\xc4\xda\xd2\xb2\xa6\x2b\x73\x6d\xb3\x8b\x96\xb6\x37\x93\xc5\x40\xf2\xcc\x25\x4f\x95\xbe\x5f\x6a\x4d\x6c\xc9\x8b\x44\x0b\xab\xef\x73\x64\x6d\x11\x2c\x9e\x96\xd0\x5e\x71\xad\xfb\x27\x1c\x88\x82\x99\x52\x89\x3c\x6e\x36\xa7\x4c\xcd\xd2\x71\x23\xe0\xf3\x72\x65\xa3\xf4\xd1\x08\x74\xf3\xdf\x0e\xdd\x32\x3b\x26\x2c\x2f\xb0\x65\xf1\x3f\x53\x55\xe3\xad\x3f\x70\x11\x85\xa0\xe3\x2d\x7d\x67\xc1\xcc\x7e\xc1\x1e\x91\x5d\x09\x15\x73\x26\xf5\x31\xd2\x7b\x11\xcc\xe6\x3c\x04\xbf\x3f\x81\x29\xf7\x1f\xd6\x23\x8e\x57\xa5\x5a\x19\x7a\xb9\x5a\x9a\x4a\xbb\x3c\xd9\x40\xea\xe6\x44\xe9\xc6\x59\x9e\x64\x37\x5d\x74\xa0\xc7\x94\xa4\xd1\x04\x78\x6c\x62\x82\xe3\xcc\xd6\xea\xe6\x04\x6b\x64\x5f\xbd\xfa\x9b\x3c\xac\x99\xff\x34\xa2\x52\x77\xad\x4a\x45\x84\xa2\xe8\x63\x9b\xd4\x43\x2d\xd5\xfe\x83\x3f\xaf\xeb\xd8\x8d\x88\xf9\xd1\x6b\x17\x4a\x39\x73\xdd\x3d\xed\xfb\x79\xbe\xb4\xbc\xe2\x22\x63\xfe\xd2\x28\xf0\x7d\x5c\xce\x0e\x0c\x78\x14\xd6\x68\x9c\xb0\x98\xc9\x19\x12\x69\xd0\xaf\xb9\x0f\xe3\x6c\x1c\x8f\xb3\xfa\xea\x3f\x72\x61\xf7\x60\x48\xad\x27\x64\xfd\x57\x53\xad\x55\x30\x23\x12\x88\xc9\xb3\x67\xf7\x0f\x88\x52\x82\x8d\x53\x45\x4b\xce\x28\x81\x15\x4f\x34\xab\xc8\xe8\x92\x12\x85\x34\x8e\x69\x40\xa5\x24\x62\x61\x50\xd8\xdb\x23\xf4\x5e\xdf\x66\x8b\xf8\x14\xd8\x04\x85\x5e\xb2\x42\xde\x8a\x72\xd4\x44\x9a\x81\xa1\xeb\x88\x39\xf8\x62\xb2\xca\xb1\x66\x69\x40\x2e\x63\xce\x37\xe8\x1f\x67\x0f\xce\xf8\x3c\x11\xb8\x51\x26\xee\xc4\x00\xd3\x9c\x66\x7d\x07\x22\xbb\x97\x62\x85\x6c\xa3\xbb\x6a\x87\x64\x65\x48\xb7\xdd\x63\x5d\x4f\x27\x6f\x4d\x28\x6d\x49\x62\x64\x69\x67\xef\xc9\x74\x73\x2c\xc1\x7b\xca\xda\x48\x96\xa5\x1c\xb4\x66\xc8\x4a\x31\xb9\x2c\x30\x65\xca\x70\xad\xd9\x6d\x97\x2d\x84\xda\xe6\x8f\x9b\x61\xf7\xb8\x74\xbb\x20\x8a\x40\xdf\xaa\x37\xf7\x5c\xf2\x36\x78\x7d\xe7\xc4\x24\x25\xf3\x5b\x2f\xe0\x03\x8d\xb5\x62\xa1\x31\xf2\x9e\x49\x08\xb8\x10\x34\x50\xff\x83\x7c\x28\x5d\xdf\xe9\x74\x07\xbe\xf7\x64\x5b\xdf\x96\xe0\x4b\x15\xb2\x18\x89\x7b\x91\x5b\x13\xe6\xec\xac\x32\x9a\x3c\x2c\x32\xab\x7b\x7b\xd9\x29\x25\x5d\xcb\x1d\xe1\x79\x2f\xe2\x52\x37\x1d\xac\x3d\xf9\xae\x0d\xae\x8f\xca\xd0\xdf\x0c\xbd\xb6\xe2\x36\x9b\xb1\xa7\xef\x52\x4b\x0a\x69\xc8\x26\x82\x7e\xd5\x21\x2f\x25\x21\x4c\x22\xa2\x14\x8d\x9b\x82\x7e\x6d\xa6\xb1\xfd\x86\x83\xff\xa9\x79\x68\x1d\xfc\x6c\xa7\x39\x25\xe8\xf0\x73\xb4\x58\x6a\x26\xf4\x24\x82\xcf\x21\x24\x0f\xf1\x61\x98\xca\x3b\x78\x05\x09\x55\x54\x4c\xd3\x45\x79\xa2\x90\xde\xd3\x88\x27\x54\x98\x18\x42\xcf\x38\xe1\x22\x9d\xcb\xa6\x41\xd3\x3c\x3a\xfa\xe9\xe0\xa7\xd7\x7a\x16\xc3\x92\xae\x0d\xfb\xfe\x49\x6c\x65\x40\x6d\x3f\xa6\x57\xd3\xda\xc4\x1f\x43\x99\xcb\xf5\x3c\x16\x7a\x2a\x0d\x5e\xa2\x32\xaf\xf6\x59\x30\x83\x21\x7d\x54\x70\x61\xe4\x28\x24\x8a\x54\xbf\x87\x2f\x5f\x20\xd7\xef\xe5\x19\xaa\xfd\xe1\x05\x54\x73\xa5\xbe\xf2\x0a\x23\x01\x63\x49\x2b\x7b\xd0\x8d\xf5\xe5\x66\xd4\xa0\x7a\x03\x15\x07\x8c\x44\xd1\xb5\xd9\x83\x3e\x4d\x22\x12\x50\xa8\xa2\xd2\x97\x32\xb2\xaf\xaa\x26\xc5\x56\xcd\xbe\xb1\x09\x5c\x91\x00\x6e\x06\xf0\x1b\xb4\x0e\x1a\x47\x59\x0b\x40\xb9\xa3\x2e\xa6\x34\xa4\xa1\x9e\x11\x69\x39\xef\x0c\x3b\x59\x2f\xc2\xd1\x6b\xe4\xc4\x9b\xc3\x75\x99\x33\x11\x9c\xf4\xaa\xcd\xff\xfc\x5c\x6b\x7c\xff\xb9\xee\x35\x3f\x2b\xfd\xdf\xe7\x56\xb3\x5a\x77\x2d\x4f\x33\x54\xab\x34\x82\xcf\x36\xc4\x3a\xff\x4b\x0e\x9f\xe3\x6a\x9e\x28\x9d\xca\x74\x5c\x6b\x36\x9e\xde\x1c\x2e\x9b\xfb\xee\xab\xcf\xb1\x5b\x5f\xb6\xaa\xdf\x30\xf9\x1e\x5c\x30\x6b\x7b\xb2\x30\xb4\x28\xf0\x5a\x1f\x49\xb3\x34\xbb\xfd\xec\x54\xe8\x3d\xc6\x1a\x18\xcb\xbe\xd3\x1e\xf1\x16\x71\x42\x67\xf9\xe4\xa4\x7b\x73\xe1\x54\xbc\xda\x89\xf7\xb4\x1e\xf2\x2e\x9b\x34\x8d\x88\x9f\x9f\x33\x3f\x0f\x81\x1f\xe7\x11\x8a\x19\x42\x6a\xea\xd0\x3f\x5c\x64\x17\x01\xed\x81\xcf\xd5\x57\x76\x1e\xfd\xc7\x79\x04\x3b\x28\x71\xa1\x5a\x05\xd3\xf0\xb9\x53\xef\xa0\xdd\x7a\xca\x1d\x3d\xeb\x5a\x2b\xae\xef\xff\xe5\x32\x65\xaf\x9f\x66\x7f\xd9\x00\x5a\x4e\x65\x99\xbb\x02\x69\x80\x16\x76\x92\xa2\xdd\x22\x61\x48\xb7\xc1\xd9\xc2\x99\xc9\xf4\xba\x59\x3f\xb4\xbb\x0f\x0f\x33\xa2\x74\x4e\xdc\x36\x69\x15\xbd\x2b\x3a\x87\x5c\x74\x49\xe7\x4a\x6d\xe5\x51\xbb\xbd\x25\xb7\x71\xcd\x15\x48\xaa\xb4\x71\xa9\xae\xf5\x5e\x57\xc1\xde\xbc\x0e\xe7\xd3\x7d\xf4\xfe\x20\x20\x51\x44\x05\x08\xfa\x57\x4a\x65\xa9\x6d\xe8\x6c\x46\x83\x3b\x3c\x19\x19\xc7\xf3\xeb\xa4\xeb\x37\x6b\x2b\x7b\x30\xb0\xe7\xe5\x81\x48\xdb\x63\xaa\x9b\x57\x8a\x8b\xa7\x6f\x1a\x30\xa0\x74\x9b\x72\x24\x71\x28\xe8\xe2\x9e\xa9\x6d\xae\xf3\x91\xd6\x28\xc5\xad\xa2\x95\x89\x41\x77\xd8\xc1\xbb\xc2\xcf\x3d\x7c\x57\xea\x0f\xb3\x4a\x65\x27\xf0\x82\xca\xdd\xd6\x68\x25\x8a\x71\xf3\x3f\x72\xc1\xe9\x4a\xdb\xdc\x3a\xd2\x06\x5c\x73\x85\xfe\xfc\x4b\x8c\x70\xf3\x18\xa0\x6c\xbd\xf2\x9e\xe3\x7c\xa3\xcb\x4f\x5e\xb2\x5e\x67\xd9\x3d\xca\xc2\x9d\xce\xaf\x56\xea\x6e\x91\x15\x4c\xbb\x57\x1c\xce\xa7\xf9\x3d\x4b\xdd\xe7\xa9\x7b\xf0\x72\x4c\x7e\x56\xfd\xf1\x43\x8c\x00\xfd\xac\x0d\xbb\x7d\x88\x51\x99\x12\x2c\x78\xe1\x90\x1d\xbe\x7b\xd5\x2a\x6d\x54\x3d\x77\xf9\xff\x95\x79\x72\xf9\x7e\x15\x35\x8a\x52\x59\x42\xeb\xe1\x87\xfc\xca\xa8\x5e\xe4\xca\x0e\xe1\xf8\x9c\x7a\x90\x94\xce\x51\x4e\x75\xe7\xaa\xf7\x74\x7d\xb6\x2c\x1f\xdd\x2d\xdc\xcf\xfa\xb7\x4b\xa7\x2c\x7f\xf0\x12\xef\xaf\x4d\x13\xb8\xa9\xcb\x14\xfc\x7f\x0c\x44\x1a\x9b\xab\xa8\x0b\xc5\x39\x9e\x9d\xf1\x9c\xbd\xc0\x1f\xdf\xcf\xae\xa0\xfa\x89\xe0\xda\xb6\xae\x12\xe1\xfb\x0f\x84\xa9\x5c\xe7\x28\x92\x44\x59\x8c\x1e\x97\x69\x50\x2c\xb8\xa3\xca\x75\x2a\xe6\x92\x2b\x6e\xa1\x21\xc6\x7c\x17\xf6\xf7\x4e\x4a\xfe\xbb\x3b\x93\x75\xc3\x6f\x6c\x8c\x67\x26\x74\x57\xe0\x57\x48\xb6\x7f\x64\x45\x5b\x1e\xfd\xf7\x9e\xc0\xfb\xd7\x96\xed\xda\x83\x4e\x14\xe9\x3f\xa7\xf2\x5d\x16\xa7\x14\x54\xe0\x63\xd7\xb1\xf7\x4c\xff\x5f\x00\x00\x00\xff\xff\x19\xb1\x6d\xfe\xa3\x4a\x00\x00")

func createDmgBytes() ([]byte, error) {
	return bindataRead(
		_createDmg,
		"create-dmg",
	)
}

func createDmg() (*asset, error) {
	bytes, err := createDmgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create-dmg", size: 19107, mode: os.FileMode(0755), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4b, 0xa0, 0xc6, 0x8f, 0x7, 0x6a, 0x7b, 0x3b, 0x44, 0xa1, 0x45, 0x1, 0x88, 0x29, 0x16, 0x9f, 0xf9, 0x65, 0xaf, 0xba, 0xc4, 0xff, 0x9f, 0xe1, 0xe0, 0xbb, 0x63, 0x4d, 0x2f, 0x94, 0x6b, 0xe7}}
	return a, nil
}

var _docProjectDeveloperNotesMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x6e\xe3\x46\x0c\xbd\xeb\x2b\x1e\x9c\x43\x2e\xb1\x37\xdd\x2d\xd0\x05\x72\x08\x16\x68\xd1\xbd\x34\x2d\x9a\xc5\x9e\x43\x49\xb4\x34\x8d\x34\x23\x90\x1c\x3b\xfe\xfb\x82\x23\xc9\x8e\x0b\x14\xd8\xdb\x68\x48\x3e\xf2\xf1\xbd\xd1\x0d\x1a\x61\x32\xde\xb6\x63\x87\x5f\xf9\xc0\x43\x9a\x58\xf0\x94\x8c\xb5\xaa\x6e\x6e\xf0\x37\x4f\x09\x03\x9d\x52\xb6\xaa\xda\xe2\xe5\x92\xfe\x82\x10\x61\x3d\x43\x52\x32\xa4\xfd\x7c\xf6\xf4\xa0\xe5\x3c\x52\x88\x98\x24\x75\x42\xa3\x97\x6a\x9e\xa6\x24\xf6\xe1\x05\x4d\x8a\x46\x21\x2a\x28\xbf\x85\x21\x90\x9c\xa0\x8d\x84\xc9\x14\x59\xb9\x45\x7d\xba\x6a\xf4\x80\x60\x18\xb3\x1a\x6a\x06\x19\xac\x27\x83\xf0\x40\x16\x0e\x8c\x29\x69\xb0\x90\x22\x2c\x5d\x55\x79\xcb\x3a\x87\xa1\x65\x79\xdf\xf2\xf1\xf1\xf1\xd1\x43\xfc\x46\xe3\x34\xb0\xbe\x8f\x65\x65\xd9\xee\xa9\x09\xb1\xc3\x1a\xf7\x5c\x63\xb5\xab\x44\xe1\x4e\x58\xb5\x74\xf5\x18\xf6\x49\xd0\xae\xeb\x2b\x35\x6d\x6a\xb6\x93\xa4\x7f\xb8\xb9\x62\x7c\x4e\x5a\xfb\xb4\xa9\xc9\x23\x47\xa3\xc2\x81\xea\x94\x9d\x60\x50\x2c\xc5\xae\xc2\xcd\xdc\xe5\x43\x55\x7d\xeb\xf9\x32\xce\x3e\x39\xb9\x1f\x9e\x6a\x57\x55\xbf\x51\xd3\x97\x98\x6b\x14\x22\x82\x29\xd2\x31\x42\x73\x3d\x83\xed\xe6\x94\xf3\x37\x22\x8d\x0c\xed\x53\x1e\x5a\xa8\x91\x18\x8e\xc1\x7a\x10\x3e\x6d\xdb\xd0\x05\x43\xcc\x63\xcd\x32\x6b\xb2\x08\xbf\x5c\x2d\x96\x68\x92\x08\xeb\x94\x62\xeb\x74\xeb\xdc\x15\x93\x88\x79\xff\x8b\x5c\xb7\x8a\xdf\x83\x7d\xcd\x35\x82\x6a\x66\x98\x50\xf3\xea\xf3\x14\xca\x33\x1d\x12\x76\x91\x6b\x86\xe4\x88\x91\x62\xa6\x61\x38\xdd\xcd\x13\xcd\xee\xd3\x3c\x98\x16\xed\x42\xe4\xf6\x9c\xb3\x73\x14\xe1\x5b\x45\x4c\xa0\x6c\x69\x24\xe3\x76\x31\x9d\x63\x3a\xa0\xf5\x3c\x82\x14\x04\xcd\xc1\x18\x14\x5b\x34\x3d\x37\xaf\x1e\x09\xb2\xa2\x3b\x16\x19\xc6\xd0\xf5\xc5\x90\x31\x34\x65\xac\x9e\x0e\xbc\x9b\xd5\x3a\x7b\x6b\xd9\xf8\xf2\xfd\xff\x4b\x77\x8e\x97\x9d\x4f\xc2\xfb\xf0\xb6\xae\x31\x38\xf1\x3a\x98\x90\x9c\x1e\x7c\x14\x5d\x37\xac\xab\x30\x92\x72\xd7\x0f\x27\x9f\x26\x44\x24\x69\xe7\xed\x6f\xa8\x3d\x50\x6c\xb8\x8d\xac\xba\xf1\x9b\x75\xb0\x3b\x68\x2a\x8f\x8a\x5e\x59\xa1\x1c\x95\x8b\x59\xfc\x01\xa8\x93\xe9\x12\xac\x2f\xb0\xf3\x5a\x56\xd8\x42\x10\xdf\x59\xdc\x65\x21\x76\x55\xf5\x45\x1d\xf8\x0f\x3a\xe1\xe3\xfd\xc7\xfb\x3b\x1c\xf9\x56\x18\x59\x5d\xec\x67\x1e\xbf\xb3\xe0\x70\x4e\x9f\x99\xa6\xa1\x5d\xef\xce\x4c\x8e\x2c\x8c\x9f\xb7\x13\x89\xb1\xe8\x1d\x86\xf0\xca\xd8\xfc\xb4\xbb\xdf\xdd\xef\x7e\xd9\xec\xaa\xa7\x74\xc4\xd1\x71\x19\x9f\x4a\xd6\x7f\xc0\xaf\x4a\x3e\x6f\xbc\x51\x50\x34\x3d\xc5\x8e\xd1\xd3\x34\xb1\xfb\x81\xf6\x76\x29\xc1\x82\xfe\x50\x0e\x9f\xcf\xee\xe5\xb7\xf2\x77\x61\x52\x5e\x0a\x96\xc4\xc5\x8c\x9a\xf7\x2e\xcf\x66\xfb\xfc\xf4\xe5\xaf\xe7\xaf\x7f\x7e\xdb\x78\x69\xf9\x71\x59\x42\xcb\x31\xb9\x79\xce\x5d\xd6\x97\xa1\x16\x86\x01\x39\xba\x38\xcb\xa3\xf4\x77\xbf\xab\xfe\x0d\x00\x00\xff\xff\xe8\xd2\xf1\xb4\x84\x05\x00\x00")

func docProjectDeveloperNotesMdBytes() ([]byte, error) {
	return bindataRead(
		_docProjectDeveloperNotesMd,
		"doc-project/Developer Notes.md",
	)
}

func docProjectDeveloperNotesMd() (*asset, error) {
	bytes, err := docProjectDeveloperNotesMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc-project/Developer Notes.md", size: 1412, mode: os.FileMode(0644), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6b, 0xce, 0x4, 0xaf, 0xe6, 0x3d, 0x60, 0x12, 0x7c, 0x46, 0x19, 0x81, 0x96, 0x2d, 0xa8, 0x25, 0xf3, 0x79, 0x1b, 0x5f, 0xbb, 0x73, 0x1c, 0xa3, 0xda, 0x4b, 0xed, 0x49, 0xcc, 0xfb, 0x8f, 0x9a}}
	return a, nil
}

var _docProjectReleaseChecklistMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x8a\x51\x39\x70\x72\xdf\x01\x72\xa0\x27\x8a\xda\x22\xe5\x86\xb7\xf1\xc6\x31\xc4\x3f\xb2\xd7\x51\x1f\x1f\x11\x5a\x24\xa4\x5e\x77\x67\x3e\x7d\xf3\x80\x03\xcf\x4c\x95\xd1\x4d\x3c\x7c\xcd\xbe\x8a\x52\x1a\xef\xd9\x92\x30\x64\x62\x2c\x5c\xaa\x4f\x11\x3e\xc2\x0c\x85\x49\x58\xdb\xe0\xcc\x63\x85\xc9\xad\xf0\xc7\xf5\x6f\x30\xb6\x38\x88\x4f\x51\x01\x1a\x07\x0e\x69\xf9\x05\x6c\xf4\xf1\xf5\xe9\xed\xb8\xdb\x9f\x36\xa8\x6d\x1c\xfd\x45\x69\x74\x29\x04\x2f\x4a\xe3\x44\x6e\x4d\x95\xab\x06\x55\x98\xa5\xdf\xf6\xdb\xde\x28\x0d\xe3\xbc\x20\xb7\x3a\x41\x6b\x21\x57\x7f\x6e\xdd\x2a\x01\xfa\xab\xa4\xb8\x12\x5e\xbc\xec\xda\x19\xb9\xa4\x4f\x1e\x04\x99\x1c\x2b\x8d\x7d\xe6\x08\xcb\x0b\xcf\x29\x07\x8e\x72\x4b\x47\xbe\xc8\x8d\xb0\x1a\x3f\xb7\x90\xff\x0d\x8e\x2d\x9c\xb9\x80\xa2\x05\x59\x0b\xba\x33\x04\x92\xe0\x45\x7d\x07\x00\x00\xff\xff\x07\xc5\x58\xd6\x45\x01\x00\x00")

func docProjectReleaseChecklistMdBytes() ([]byte, error) {
	return bindataRead(
		_docProjectReleaseChecklistMd,
		"doc-project/Release Checklist.md",
	)
}

func docProjectReleaseChecklistMd() (*asset, error) {
	bytes, err := docProjectReleaseChecklistMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc-project/Release Checklist.md", size: 325, mode: os.FileMode(0644), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9c, 0x6a, 0x79, 0x7f, 0xa5, 0x52, 0x70, 0x39, 0xce, 0xeb, 0x4a, 0x97, 0x33, 0x8e, 0xda, 0xd2, 0x9a, 0x3d, 0xd4, 0xf7, 0x99, 0x4e, 0x48, 0x4, 0xd2, 0xb8, 0x4e, 0x99, 0x71, 0x86, 0xa5, 0xd5}}
	return a, nil
}

var _supportEulaResourcesTemplateXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\x4f\x73\xa2\x48\x18\xc6\xcf\xfa\x29\x58\x77\xaf\x11\x24\xb1\x2a\xd9\x22\x4e\x35\x08\xd8\x8e\x12\xf9\x27\xd2\x97\x2d\xa0\xa9\x96\x11\xd0\x91\x46\x03\x5b\xf3\xdd\xb7\x1a\x82\x95\xcc\x4c\xcd\x3a\x87\xa4\x4f\x2d\x3e\xcf\xfb\x34\xfd\x6b\x78\x91\x3e\x3d\x67\x29\x77\x8a\x8f\x45\xb2\xcf\x1f\x07\xa3\xa1\x30\xe0\xe2\x3c\xda\xe3\x24\x27\x8f\x03\xd7\xd1\x6e\xee\x07\x9f\x26\x7d\xe9\x8f\xe9\x93\xe2\xf8\x2b\x95\x3b\xa4\x49\x41\xb9\x95\x2b\x2f\xa0\xc2\x0d\x6e\x78\x1e\x1c\x0e\x69\xcc\xf3\x53\x67\xca\xad\x16\xd0\x76\xb8\xd1\x50\xe0\x79\xd5\x18\x70\x83\x2d\xa5\x87\xbf\x79\xfe\x7c\x3e\x0f\x03\xa6\x1a\x46\xfb\x8c\x09\x0b\x7e\x75\xdc\x1f\xe2\x23\xad\x16\x49\x41\x6f\x46\x43\x61\x88\x29\x1e\x4c\xfa\x52\x5b\xfd\xcd\x72\x26\x7d\x09\x27\x11\x9d\xf4\x7b\xd2\x2e\xae\x26\x8b\x55\x12\x49\x3c\x9b\xf5\x7b\x52\x70\x3c\x06\x6c\xd2\xeb\x24\xbd\x56\x04\x28\x3d\x26\x61\x49\xe3\xa2\x93\xf6\x7a\x52\x41\x8f\x49\x4e\x26\xc2\xb3\x20\x08\x82\xc4\xbf\xfc\xbc\x78\xa6\x01\x0d\x5e\xa9\x71\x40\x83\x66\x06\xd8\x20\xe0\xd5\x30\x01\x00\x8f\x8f\x8d\x8a\xbf\xc8\x9a\x1a\x70\xfa\x63\xde\xf8\xa7\x69\x46\x90\xc5\x3f\x6a\x5f\xeb\x24\xbe\xbb\x6d\xbe\xbb\xcd\xc6\x69\x3b\xd6\x9f\x1f\xbc\x01\xbe\x61\x79\xe3\x3c\xd4\xd3\x3a\x50\x64\x01\x6d\x0c\x61\x69\xae\x65\x74\x3b\x4f\x91\xb9\x55\x83\x8d\xb1\x6d\xe7\x6b\x33\xca\xd2\x12\x03\xec\x30\x9f\xbf\x41\xe9\x22\xb9\x2b\xe3\x5d\x9a\xc1\x59\x7a\xc2\xb6\xdc\xea\x6c\xf9\x36\xd8\x58\x7b\x38\xb3\xf6\xc8\x66\xf5\xe6\x34\xaa\xe4\x13\x4a\x64\x81\xf9\x02\x3d\xad\xa1\xfe\x7c\xf0\xc5\x75\x19\x89\x6e\x01\x75\xa3\x08\x3c\xe3\x08\x95\x79\x9b\x69\x43\x82\xf5\x7b\xe2\x7b\xc6\x17\xb4\x31\x6a\x56\x87\xf9\x90\x2d\xd7\xa1\x88\x04\x2c\x6a\x15\xb2\xef\x88\xed\xf9\x24\xf6\x1e\x46\x50\xb7\x4e\x50\x1f\x9f\xb0\xd2\xe5\x9f\x89\x2f\xb2\xfa\x05\x61\x3e\xb8\xb3\x0e\x91\xa8\xe5\x51\xb6\x4e\x61\x72\xf7\x2e\x60\xd5\x9c\xa4\x49\xb1\xe5\xc2\x92\xd2\x7d\x5e\xfc\x94\xf3\x3b\x33\x9c\x5d\x18\x82\x5f\xb3\xeb\xb8\x31\x5f\x2c\x5c\xcf\xae\xe3\xd6\xb0\xef\xd8\xcd\xe4\xaa\x61\xf4\x1d\xbb\xc0\x1b\xd7\x58\xd7\x8a\x50\x61\x3e\x97\x44\xe2\x43\xc6\x7c\x78\x86\xb7\x51\xe6\x96\x50\xbd\xe4\xee\xc2\x4a\x2e\xc3\x5b\x93\xf8\x1e\xae\x90\xf7\xe6\x3c\x34\xeb\x6f\xd8\xb7\xb5\xcb\xdf\x60\x27\xfe\x26\xbb\x6b\x9e\xcd\xbf\xfe\x55\xdd\x05\xf8\x47\x7b\xb2\x96\xc0\xf9\xf6\x71\x4f\xe9\x4b\xee\x14\x38\xe0\xdb\x3b\x1e\xdf\x6b\xb6\xc0\x59\xae\x16\x1f\xfa\x7a\x52\x05\x2b\x45\x99\x36\x0a\x67\x26\x71\x74\xad\x44\xb7\xeb\x2d\x12\x5d\x62\xbb\x96\xba\x1e\xcd\x55\xd9\x35\x4e\xd8\x1b\x0b\x8e\x60\x3c\xad\x81\xf9\xf5\x73\xb2\xff\xca\x7c\x8e\x66\xb8\xe6\x99\xd6\xf1\x66\x49\x42\xe6\xab\xe4\xb9\xa5\x5a\x1b\x77\x67\xc6\xa1\xfe\xf0\xc5\xf7\xce\x24\xca\xd6\x35\x54\x53\x15\x2a\xdb\x13\xca\x50\xdd\x1c\xb5\x8d\x49\x50\x3e\x3f\x85\x36\x18\x2d\xa7\xe0\x6c\x69\xd8\xb6\x64\x50\x2d\xbc\xf9\x18\xeb\x6e\x5b\xab\x5d\x03\xdf\xfc\x07\xcc\x26\x8f\xe5\xb2\x4c\xcb\xbc\xbe\x77\x8c\xc4\xfb\x6b\x11\xb5\x7d\xf1\xff\xf9\x14\xb4\x4a\x3f\xb8\x7d\x2c\x5f\xfa\xe6\x19\x28\x26\x70\xc1\xf7\x43\x89\xc0\x14\x80\x39\x90\x4d\xb9\xbb\x74\xe9\xbb\x00\x80\xcf\x84\x15\xd8\x01\xed\xad\xeb\x3d\x5f\xd3\xbf\xde\xc7\xee\x8a\xc4\x37\x5f\x2b\x93\xfe\x7f\x01\x00\x00\xff\xff\xc9\x75\x99\xb8\x44\x09\x00\x00")

func supportEulaResourcesTemplateXmlBytes() ([]byte, error) {
	return bindataRead(
		_supportEulaResourcesTemplateXml,
		"support/eula-resources-template.xml",
	)
}

func supportEulaResourcesTemplateXml() (*asset, error) {
	bytes, err := supportEulaResourcesTemplateXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "support/eula-resources-template.xml", size: 2372, mode: os.FileMode(0644), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa8, 0x4, 0xe5, 0x33, 0xe9, 0xc9, 0x94, 0x91, 0xa7, 0x4c, 0xb4, 0x50, 0x2c, 0x43, 0x5b, 0x0, 0xd9, 0x2, 0xdc, 0x7a, 0x45, 0xd3, 0x69, 0x30, 0x57, 0xa2, 0x96, 0x74, 0xe5, 0x84, 0xa7, 0xb}}
	return a, nil
}

var _supportTemplateApplescript = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x5b\x6f\xda\x4c\x10\x7d\x36\xbf\x62\x64\x7d\x8a\x82\x12\x72\xd1\xf7\x58\x55\x15\x01\x12\xac\x52\x20\x40\x1a\x68\x53\xa1\xc5\x1e\xcc\x34\x66\x17\xed\xae\xa1\x17\xe5\xbf\x57\xb3\xc0\x62\x48\x5a\xe5\xa5\xea\x83\x25\xef\x9c\xb9\x9c\x39\xb3\x3b\x4a\x82\xce\x25\x1c\x2f\x55\x96\xcf\xb1\x2d\xe6\x58\x2e\x05\x16\xb3\x0c\xc4\x62\x91\x51\x2c\x2c\x29\x09\xe1\x35\xc9\x04\x75\x58\x0a\xd6\x58\x42\xe6\xb1\x18\x03\xc2\x80\xb1\x9a\x64\x5a\x2e\x05\x41\xa0\x16\x28\x4b\xfc\x63\xd0\x82\x9d\xe1\xb0\xa3\x29\x25\x09\x56\xc1\x7d\xd4\x1e\x16\x90\xd1\x1e\x32\x2a\x20\xf7\x94\xd8\xd9\xc6\x7e\x5f\xb0\x37\x91\xd2\x99\xdd\x00\xcd\x62\x95\x2b\x65\xad\x9a\xf7\x18\x1e\x32\x7e\x5c\xa8\x7c\xe2\x53\x96\x5f\x8e\x18\x6d\x23\x46\xc5\x88\x75\x31\x1f\x92\x98\xbe\x55\x1a\xd9\x35\x7c\x08\x43\x38\x82\xf0\xfc\xa3\x13\xc1\x9c\xf3\xa9\x20\x08\x43\xce\xe1\xac\xde\x1f\xf7\x07\x9d\x5e\xe3\x21\x0c\x1d\x5b\x27\x60\xac\xa4\x15\x24\x51\xc3\x8a\x64\xa2\x56\x0c\xb8\x12\x71\xae\x35\x4a\x0b\x4b\xc2\x15\xd7\xa1\x58\x49\x77\xf0\x1e\x56\xa9\x6c\x22\x34\x2c\xc9\xd0\x24\x73\x64\xa6\x22\x33\xe8\x1d\x8c\x15\x36\x37\x7f\x74\xb1\x33\x84\x89\xca\x65\x62\x18\xfb\xb9\x13\xea\xb4\x30\x94\xd3\x43\x51\x0f\x0d\xa3\xa7\xd7\xd6\xec\x35\xba\x9d\x7e\x34\x88\x3a\xed\x71\x33\xaa\xd7\x1b\xed\xf1\x75\xd4\x6a\xf4\xc7\xb5\x56\xf5\xae\xdf\x60\x17\x94\x09\xb0\x32\x7e\xa0\x6a\x61\x1d\x39\xa6\xea\x45\x60\x2b\x29\x69\x40\x4d\x5f\x94\xd0\x69\xcb\x91\x9e\x98\x0b\x35\xf4\xc3\x11\x8a\x6a\x9d\xf6\xb8\x1f\x7d\x6a\xec\x84\xc0\x6f\xd6\xc3\x83\xc6\x70\xb0\x0f\x0b\xad\x85\x4c\x71\xce\x13\xb1\x0a\xa4\xf2\xa6\x64\x8f\x74\x10\x04\x57\xd5\xda\xfb\x9b\x5e\xe7\xae\x5d\xdf\x76\xc5\xd6\x4a\x05\xba\xca\x10\x93\x26\x99\xb2\xc5\x0b\xb1\xef\xd5\xa4\x64\xe3\xd0\x8c\xea\x51\xfb\xe6\x00\xae\x16\x1e\xa3\x90\x09\xdc\xb6\xa0\x45\xf2\x11\x6a\x99\xc8\x0d\xba\x76\xab\xdd\x6e\x2b\xaa\x55\x8b\xb9\x83\x20\xb8\x6d\x15\x0e\x71\xa6\xd6\x03\x71\x0f\x74\x9d\xf9\x5a\xe9\x18\xc1\x88\x25\xc9\x94\x65\x65\xbd\x59\x10\x86\x13\xcc\xc4\x77\xb8\x7c\xc5\xb5\xfd\x6b\x77\x0e\x2a\x70\x79\xf1\xec\xe2\x39\xeb\xd3\xc1\x08\x8a\x57\xa8\xc0\xfc\x35\x0b\xeb\x1f\x35\xf7\xf2\x83\xfa\x4d\x4b\x95\x4a\x4a\x4b\x74\x95\xa6\x6e\x1b\x83\x51\x73\x04\x4b\x73\xc7\x67\xa5\xc9\xae\x51\xb7\x71\xdc\x9e\x9a\x52\x86\x5e\x8c\xff\x39\x09\x73\x5d\x09\xb2\x83\x4d\xd4\xc5\xc6\x86\x5f\x31\xb6\x1f\xf6\x1a\xd3\xb8\x40\x61\x61\x35\xa3\x0c\x3d\x4e\x66\xd7\xf8\x56\xe3\xe0\x79\x5a\xff\x7f\xb2\xc6\xf9\xa3\x29\x1c\x27\x0a\xcc\x8c\xb5\x36\xb1\xa6\x85\x85\xf0\x33\x54\xa6\xc0\x7b\x72\xbb\x5a\x8f\x20\x84\x2f\x6f\x00\xe3\x99\x82\xff\xde\x85\x65\x78\x0b\xe1\x45\xc8\x7d\x49\x38\x20\x6a\x75\x8e\x1b\x8d\xd6\x5c\x4b\x41\x90\xa9\x14\x42\xae\x8e\x89\x4b\xeb\x89\x70\x5e\x83\xb1\xe2\x09\x4d\x95\x06\xbf\x96\x39\xd3\x04\x21\xd6\x28\x2c\x26\x67\x61\x69\x27\xba\xcb\x9c\xcb\xd2\xaf\x00\x00\x00\xff\xff\x0f\x5d\x68\x15\x24\x07\x00\x00")

func supportTemplateApplescriptBytes() ([]byte, error) {
	return bindataRead(
		_supportTemplateApplescript,
		"support/template.applescript",
	)
}

func supportTemplateApplescript() (*asset, error) {
	bytes, err := supportTemplateApplescriptBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "support/template.applescript", size: 1828, mode: os.FileMode(0644), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x13, 0x72, 0x7c, 0x79, 0x30, 0xc5, 0xb, 0xe6, 0x39, 0xa1, 0xeb, 0x19, 0x1e, 0x89, 0x3f, 0x1e, 0xbc, 0x72, 0xc2, 0x70, 0x26, 0x8d, 0x46, 0x11, 0x39, 0x1b, 0x41, 0x41, 0xa, 0x3e, 0x86, 0x2a}}
	return a, nil
}

var _ThisIsTheCreateDmgRepo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc9\xb1\x0d\x02\x31\x0c\x05\xd0\xfe\xa6\xf8\x1d\x15\xac\xc1\x02\x2c\x10\x2e\xff\x2e\x46\x8e\x8d\x6c\x47\x88\xed\x91\xa8\xdf\x63\x48\x42\x12\xaf\x95\x85\x86\xbe\xe6\xfc\xe2\x10\x25\xd2\xb1\x07\x5b\xf1\xda\xe7\x89\xbd\x19\x8a\xaa\xf8\x0c\xd6\x60\x40\xea\x92\x78\x52\xec\x44\x2c\xc3\x11\x3e\x37\xb1\x94\x4e\xd4\x20\xee\x52\x08\xbe\x1d\x1e\x7f\x43\x33\x88\x65\x35\x55\x76\xa8\xef\xad\xc4\xed\xb6\xfd\x02\x00\x00\xff\xff\xeb\x53\x27\x5e\x80\x00\x00\x00")

func ThisIsTheCreateDmgRepoBytes() ([]byte, error) {
	return bindataRead(
		_ThisIsTheCreateDmgRepo,
		".this-is-the-create-dmg-repo",
	)
}

func ThisIsTheCreateDmgRepo() (*asset, error) {
	bytes, err := ThisIsTheCreateDmgRepoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".this-is-the-create-dmg-repo", size: 128, mode: os.FileMode(0644), modTime: time.Unix(1722367544, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0x24, 0x94, 0xeb, 0x10, 0x14, 0x6a, 0x84, 0xbb, 0xb2, 0xe, 0xbb, 0x19, 0x8c, 0x2a, 0x9, 0xfb, 0x72, 0xae, 0xd1, 0x19, 0x70, 0x6d, 0xc5, 0x5b, 0x6e, 0xc3, 0x64, 0x40, 0x18, 0x38, 0x3f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"LICENSE":                             license,
	"Makefile":                            makefile,
	"README.md":                           readmeMd,
	"builder/create-dmg.builder":          builderCreateDmgBuilder,
	"create-dmg":                          createDmg,
	"doc-project/Developer Notes.md":      docProjectDeveloperNotesMd,
	"doc-project/Release Checklist.md":    docProjectReleaseChecklistMd,
	"support/eula-resources-template.xml": supportEulaResourcesTemplateXml,
	"support/template.applescript":        supportTemplateApplescript,
	".this-is-the-create-dmg-repo":        ThisIsTheCreateDmgRepo,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	".this-is-the-create-dmg-repo": {ThisIsTheCreateDmgRepo, map[string]*bintree{}},
	"LICENSE":                      {license, map[string]*bintree{}},
	"Makefile":                     {makefile, map[string]*bintree{}},
	"README.md":                    {readmeMd, map[string]*bintree{}},
	"builder": {nil, map[string]*bintree{
		"create-dmg.builder": {builderCreateDmgBuilder, map[string]*bintree{}},
	}},
	"create-dmg": {createDmg, map[string]*bintree{}},
	"doc-project": {nil, map[string]*bintree{
		"Developer Notes.md":   {docProjectDeveloperNotesMd, map[string]*bintree{}},
		"Release Checklist.md": {docProjectReleaseChecklistMd, map[string]*bintree{}},
	}},
	"support": {nil, map[string]*bintree{
		"eula-resources-template.xml": {supportEulaResourcesTemplateXml, map[string]*bintree{}},
		"template.applescript":        {supportTemplateApplescript, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
